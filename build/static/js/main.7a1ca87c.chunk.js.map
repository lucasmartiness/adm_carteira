{"version":3,"sources":["redux/root.js","firebase.js","components/carteira/carteira.js","components/carteira/adicionarButton.js","components/carteira/navbar.js","components/carteira/form.js","components/carteira/carteiraComponent.js","components/ativo/navbar.js","components/ativo/ativo.js","components/ativo/form.js","components/ativo/chart.js","components/ativo/ativoComponent.js","components/ativo/formOperacao.js","src/AtivoFinanceiro.js","src/RendaFixa.js","src/RendaVariavel.js","src/Mercado.js","src/Carteira.js","components/ativo/operacaoComponent.js","Routes.js","component/Navbar.js","App.js","index.js","src/Operacao.js"],"names":["rootReducer","combineReducers","form","formReducer","store","createStore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","styles","makeStyles","style","container","margin","card","width","minHeight","text","fontSize","fontWeight","button","red","color","blue","cardFooter","position","bottom","cardFooterButtonContainer","marginRight","Carteira","props","classes","history","useHistory","Grid","item","xs","sm","md","lg","className","Button","Card","variant","CardContent","onClick","push","id","Typography","align","title","CardActions","IconButton","delete","Icon","update","marginTop","Adicionar","open","texto","appbar","NavbarCustom","AppBar","Toolbar","FormCarteira","useState","nome","setNome","useEffect","Dialog","onClose","DialogTitle","DialogContent","TextField","placeholder","value","onChange","e","target","onSave","carteiraRef","firestore","collection","carteiraContainer","padding","topContainer","display","justifyContent","Carteiras","uns","onSnapshot","carteiras","carteirasCarregadas","docs","map","carteira","data","setCarteiras","console","log","match","url","formOpen","setFormOpen","fields","updateData","setUpdateData","doc","set","then","add","Box","bgColor","Container","component","spacing","key","get","mapTipoAtivo","textTransform","cardAction","Ativo","rotulo","base","Intl","NumberFormat","currency","format","patrimonio","toFixed","onDelete","ehAtivoVariavel","setAtivoVariavel","setRotulo","Select","MenuItem","Graphic","dados","ativos","height","chartType","loader","CircularProgress","options","pieStartAngle","legend","ativoRef","AtivoComponent","setAtivos","setCarteira","params","ativosCollection","ativo","d","forEach","res","foundedSomeone","alert","catch","mt","Breadcrumbs","Link","RouterLink","to","flexGrow","length","ativoItem","useStyle","marginLeft","textField","FormOperacao","valor","setValor","setData","qtd","setQtd","tipoOperacao","setTipo","juros","setJuros","prazo","setPrazo","idOperacao","setId","ehInserir","carteiraId","ativoId","type","required","FormControl","fullWidth","EhAtivoVariavel","formData","AtivoFinanceiro","require","valorCotacao","tipo","operacoes","pegarOperacoes","this","qtdAtivosEmPosse","calcularMediaCompra","totalCompra","qtdAtivosComprados","isNaN","totalVenda","qtdAtivosVendidos","valorPatrimonialCotacao","valorPatrimonial","lr","calcularMediaVenda","lucroRealizado","lucroNaoRealizado","warn","reduce","acumulador","Math","abs","atual","RendaFixa","cotacao","atrelacao","jurosMedio","calcularMediaJuros","qtdCompras","qtdAtivosRealizados","lucro","isFinite","lucroTotal","media","qtdAtivosRealizadosEVendidos","total","totalRealizados","RendaVariavel","axios","ObterCotacao","acao_metodo","a","resultado","Object","entries","RendaTotal","TodosAtivos","dinheiro","proporcoes","listaOperacoes","listaValorPatrimonialHistorico","qtdOperacoes","operacao","rendaFixa","vp","lucroCarteiraRealizadoRelativo","lucroProvisorio","lucroProvisorioTotalRelativo","sort","p","Date","ativoEncontrado","find","nomeAtivo","encontrado","ObterAtivoPeloNome","valorMedioCompraComJuros","AlgoritmoAdcionador","novoAtivo","acc","curr","lucroCarteiraRealizado","lucroProvisorioTotal","historico","count","OrdenarOperacao","preco","jurosAA","qtdTempoAnos","vpa","rendaTotal","buscarNome","undefined","Number","historicoMensal","getMonth","getFullYear","lucroAcumulado","proporcaoGeral","proporcao","valorPatrimonialTotal","rentabilidadeProvisoria","lucroTotalRelativo","rentabilidade","lucroRealizadoRelativo","quantia","filter","operacoesRef","carteira_id","ativo_id","operacoesContainer","AtivoDataHeader","carteiraDoc","carteiraAdm","setOpenDialog","setEhInserir","carteira_param","ativo_param","updateFormState","setUpdateFormDialog","FormUpdate","ativoForm","setAtivoForm","my","submitUpdateForm","LinkHeader","carteiraParam","ShowOperacoes","handleDelete","handleAtualizar","overflowX","Table","TableHead","TableRow","TableCell","TableBody","mx","AtivoSingular","routesConfig","path","exact","setAtivo","setOperacoes","setCount","setCarteiraDoc","CarteiraAdmin","atualizarOperacao","setAtualizarOperacao","openDialog","unsubscribe","exists","ref","_carteira","operacoesTotal","_ehAtivoFixo","OperacaoNova","Operacao","parseFloat","parseInt","adicionarAtivo","detalhes","theme","Navbar","Routes","route","App","ReactDOM","render","document","getElementById","TipoOperacao","Comprar","Vender","Jsp","Dividendos","Resgate","random","calcularJuros","calcularQtdAnos","qtdAnos"],"mappings":"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","file":"static/js/main.7a1ca87c.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n  // ...your other reducers here\r\n  // you have to pass formReducer under 'form' key,\r\n  // for custom keys look up the docs for 'getFormState'\r\n  form: formReducer\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store ","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD49GnV25MVPCggX6231YaJWI777nZZnbI\",\r\n  authDomain: \"app-carteira-inv.firebaseapp.com\",\r\n  databaseURL: \"https://app-carteira-inv.firebaseio.com\",\r\n  projectId: \"app-carteira-inv\",\r\n  storageBucket: \"app-carteira-inv.appspot.com\",\r\n  messagingSenderId: \"178456734181\",\r\n  appId: \"1:178456734181:web:14b6909faa43c59338a70c\"\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore()\r\n// db.settings({timestampsInSnapshots:true})\r\n\r\nexport default firebase","import React from 'react'\r\nimport firebase from './../../firebase'\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  AppBar,  Toolbar,\r\n  Typography ,\r\n  Icon, IconButton,\r\n  Container,  Grid , \r\n  makeStyles ,\r\n  Card ,   CardContent ,  CardActions, \r\n  Link , \r\n  Button \r\n} from '@material-ui/core'\r\n \r\nimport {Link as Linker} from 'react-router-dom'\r\n \r\nlet styles = makeStyles((style)=>({\r\n  container:{\r\n    margin:\"10px\"\r\n  },\r\n  card:{\r\n    width:\"100%\",\r\n    minHeight:\"100px\"\r\n  },\r\n  text:{\r\n    fontSize: \"14px\",\r\n    fontWeight:\"bold\"\r\n  },\r\n  button:{\r\n    width:\"100%\"\r\n  },\r\n  red:{\r\n    color:'red'\r\n  },\r\n  blue:{\r\n    color:'blue'\r\n  },\r\n  cardFooter:{\r\n    position:\"absolute\",\r\n    bottom: \"0px\"\r\n  },\r\n  cardFooterButtonContainer:{\r\n    marginRight:\"40px\"\r\n  }\r\n}))\r\n\r\nconst Carteira = ( props ) => {\r\n\r\n  let classes = styles()\r\n  let history = useHistory();\r\n\r\n    const handleClick = () => {\r\n      history.push( \"/carteira/\"+props.id  )\r\n    }  \r\n\r\n  return(\r\n    <Grid item xs={12} sm={5} md={5} lg={2} className={classes.container} >\r\n\r\n    <Button className={classes.button} >\r\n      <Card  className={classes.card} variant=\"outlined\">\r\n       \r\n          <CardContent  onClick={ handleClick }>\r\n            <Typography className={classes.text} variant=\"h2\"  align=\"left\">\r\n              {/* <Icon>star </Icon> */}\r\n              {props.title}\r\n            </Typography>\r\n            \r\n          </CardContent>\r\n          <CardActions className={classes.cardFooter}>\r\n            \r\n              <IconButton onClick={ props.delete } color=\"secondary\"  >\r\n                <Icon>\r\n                  delete\r\n                </Icon>\r\n              </IconButton>\r\n              <IconButton onClick={ props.update }  >\r\n                <Icon>\r\n                  edit\r\n                </Icon>\r\n              </IconButton>\r\n            \r\n          </CardActions>\r\n      </Card>\r\n    </Button>\r\n    \r\n  </Grid>)\r\n}\r\n\r\nexport default Carteira","import React from 'react'\r\nimport firebase from './../../firebase'\r\n\r\nimport {AppBar,Toolbar, Typography , Container, makeStyles , Card , CardContent , Grid , Link , Button } \r\nfrom '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport {Link as Linker} from 'react-router-dom'\r\n \r\n\r\nlet styles = makeStyles((style)=>({\r\n  container:{\r\n    marginTop:\"18px\"\r\n  },\r\n  card:{\r\n    width:\"100%\",\r\n    minHeight:\"100px\"\r\n\r\n  },\r\n  text:{\r\n    fontSize: \"25px\"\r\n  },\r\n  button:{\r\n    width:\"100%\",\r\n  }\r\n}))\r\n\r\nconst Adicionar = ( props ) => {\r\n\r\n  let classes = styles()\r\n\r\n\r\n  const handleClick = () => {\r\n    props.open()\r\n  }  \r\n\r\n\r\n  return(\r\n  <Grid xs={12} sm={5} md={5} lg={2} className={classes.container} >\r\n    <Button className={classes.button}  onClick={ handleClick }>\r\n      <Card  className={classes.card} variant=\"outlined\">\r\n       \r\n          <CardContent >\r\n            <Typography variant=\"body2\" >\r\n              {props.texto}\r\n            </Typography> \r\n            <Typography className={classes.text} variant=\"h6\" align=\"center\">\r\n                <Icon>add_circle</Icon>\r\n            </Typography>\r\n\r\n          </CardContent >\r\n      </Card>\r\n    </Button>\r\n    \r\n  </Grid>)\r\n}\r\n\r\nexport default Adicionar","import React from 'react'\r\n\r\nimport {AppBar,Toolbar,Typography , makeStyles} from '@material-ui/core'\r\n\r\nlet styles = makeStyles((style)=>({\r\n  appbar:{\r\n    position:\"relative\"\r\n  }\r\n}))\r\n\r\nconst NavbarCustom = ( props ) => {\r\n\r\n  let classes = styles()\r\n\r\n  return(\r\n  <AppBar className={classes.appbar}>\r\n    <Toolbar>\r\n      <Typography>\r\n        Carteira\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>)\r\n}\r\n\r\nexport default NavbarCustom","import React, {useState,useEffect} from 'react'\r\nimport {AppBar,Toolbar,Typography , Container, makeStyles , Button, Box , Grid , Paper , Dialog , DialogTitle, DialogContent , TextField} from '@material-ui/core'\r\n\r\nconst classes = makeStyles((style)=>({\r\n  \r\n}))\r\n\r\nconst FormCarteira = (props) => {\r\n\r\n  let [nome,setNome] = useState( props.nome || \"\" )\r\n\r\n  const handleClick = () => {\r\n    props.onSave(nome)\r\n    setNome(\"\")\r\n  }\r\n\r\n  useEffect( () => {\r\n    setNome( props.nome )\r\n  } , [props.nome])\r\n\r\n  return(\r\n    <Dialog onClose={props.onClose} open={props.open}>\r\n      <DialogTitle>\r\n        Adicionar Uma nova carteira\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <TextField placeholder=\"nome\" value={nome} onChange={(e) => setNome(e.target.value)} />\r\n        <Button onClick={handleClick}> Salvar </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default FormCarteira","import React, {useState,useEffect} from 'react'\r\nimport firebase from './../../firebase'\r\n\r\nimport {AppBar,Toolbar,Typography , Container, makeStyles , Card , Box , Grid , Paper} from '@material-ui/core'\r\n\r\nimport Carteira from './carteira'\r\nimport AdicionarButton from './adicionarButton'\r\nimport Navbar from './navbar'\r\n\r\nimport FormCarteira from './form'\r\n\r\nconst carteiraRef = () => firebase.firestore().collection(\"carteira\")\r\n\r\nlet styles = makeStyles((style)=>({\r\n  carteiraContainer:{\r\n    padding:\"20px\",\r\n    marginTop: \"40px\"\r\n  },\r\n  container:{\r\n    // background:\" #eee\"\r\n    margin: \"auto auto\",\r\n  },\r\n  topContainer:{\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    width: \"100%\"\r\n  }\r\n}))\r\n\r\n\r\nexport const Carteiras = ( props ) => {\r\n\r\n  let classes = styles()\r\n  \r\n\r\n  useEffect( () => {\r\n    \r\n    let uns = carteiraRef()\r\n    .onSnapshot(( carteiras ) => {\r\n      \r\n      const carteirasCarregadas = carteiras.docs.map( carteira => ( {id:carteira.id, ...carteira.data() } ) )\r\n      \r\n      setCarteiras (carteirasCarregadas)\r\n      \r\n      console.log(carteirasCarregadas)\r\n    })\r\n    \r\n    return () => uns()\r\n  },[ props.match.url ])\r\n\r\n\r\n  let [carteiras,setCarteiras] = useState([]) \r\n  let [formOpen, setFormOpen] = useState(false)\r\n  let [updateData , setUpdateData ] = useState({id:0, update:false , fields:{ nome : \"\" }})\r\n  \r\n  const handleDelete = (id) => carteiraRef().doc(id).delete()\r\n\r\n  const handleInsert = (title) => {\r\n\r\n    if(!updateData.update){\r\n\r\n      carteiraRef().add({title}).then( () => setFormOpen( false ))\r\n    }\r\n    else{\r\n      carteiraRef().doc( updateData.id ).set({title}).then( () => setFormOpen( false ))\r\n      setUpdateData({ id:0 , update:false, fields:{ nome:\"\"} })\r\n    }\r\n    \r\n  }\r\n  \r\n  const handleUpdate = ( id ) => {\r\n    \r\n    \r\n    carteiraRef().doc( id ).get().then( ( data ) => {\r\n      \r\n      console.log( data.data().title )\r\n      setUpdateData({id, update:true, fields:{ nome : data.data().title} } )\r\n      setFormOpen(true)\r\n      \r\n     } )\r\n    \r\n    //\r\n  }\r\n\r\n  return(<>\r\n    <FormCarteira \r\n        onClose={() => setFormOpen( !formOpen) }\r\n        open={formOpen} \r\n        onSave={ (nome) => handleInsert(nome) } \r\n        nome = { updateData.fields.nome }\r\n        />\r\n    <Navbar />\r\n    <Box bgColor=\"green\" className={classes.topContainer}>\r\n      <Container className={classes.container}>\r\n\r\n          \r\n          <Card className={ classes.carteiraContainer} variant=\"outlined\">\r\n            <Typography>\r\n              Suas  \r\n            </Typography>\r\n            <Typography variant=\"h4\" component=\"h1\">\r\n              Carteiras\r\n            </Typography>\r\n\r\n            <Grid container  spacing={2}>\r\n            \r\n              {carteiras && carteiras.map(\r\n                  carteira => \r\n                  ( <Carteira key={carteira.id} \r\n                              title={ carteira.title} \r\n                              id={carteira.id}\r\n                              delete={ () => handleDelete( carteira.id )} \r\n                              update={ () => handleUpdate( carteira.id )} />)    )}\r\n              \r\n              <AdicionarButton \r\n                  texto=\"Adicionar\" \r\n                  open={ () => setFormOpen(true)}        />\r\n            </Grid> \r\n          </Card>\r\n      </Container>\r\n    </Box>\r\n  </>)\r\n}","import React from 'react'\r\n\r\nimport {AppBar,Toolbar,Typography , makeStyles} from '@material-ui/core'\r\n\r\nlet styles = makeStyles((style)=>({\r\n  appbar:{\r\n    position:\"relative\"\r\n  }\r\n}))\r\n\r\nconst NavbarCustom = ( props ) => {\r\n\r\n  let classes = styles()\r\n\r\n  return(\r\n  <AppBar className={classes.appbar}>\r\n    <Toolbar>\r\n      <Typography>\r\n        Ativo\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>)\r\n}\r\n\r\nexport default NavbarCustom","import React from 'react'\r\nimport firebase from './../../firebase'\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport {AppBar,Toolbar, Box, Typography , Container, makeStyles , Card , CardActions, CardContent , Grid , Link , Button, Icon } from '@material-ui/core'\r\n \r\nimport {Link as Linker} from 'react-router-dom'\r\n \r\nconst mapTipoAtivo = []\r\nmapTipoAtivo['acao'] = 'Ação'\r\nmapTipoAtivo['titulo'] = 'Titulo'\r\nmapTipoAtivo['fundo_de_emergencia'] = 'Fundo de Emergencia'\r\nmapTipoAtivo['fundo_imobiliario'] = 'Fundo Imobiliario'\r\n\r\nlet styles = makeStyles((style)=>({\r\n  container:{\r\n    margin:\"10px\"\r\n  },\r\n  card:{\r\n    width:\"100%\",\r\n     \r\n  },\r\n  text:{\r\n    fontSize: \"14px\",\r\n    fontWeight:\"bold\",\r\n    textTransform:\"capitalize\"\r\n  },\r\n  button:{\r\n    width:\"100%\"\r\n  },\r\n  cardAction:{\r\n    display:\"flex\",\r\n    justifyContent:\"center\"\r\n  }\r\n}))\r\n\r\nconst Ativo = ( props ) => {\r\n\r\n  \r\n  let classes = styles()\r\n  let history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push( props.base   )\r\n  }  \r\n\r\n  console.log( mapTipoAtivo[props.rotulo] , props.rotulo )\r\n  return(\r\n    <Grid xs={12} sm={5} md={5} lg={2} className={classes.container} >\r\n\r\n    <Button className={classes.button}  >\r\n      <Card  className={classes.card} variant=\"outlined\">\r\n       \r\n          <CardContent onClick={ handleClick }>\r\n            <Typography variant=\"subtitle2\" align=\"left\">\r\n              { mapTipoAtivo[ props.rotulo ] || \"Ativo\"}\r\n            </Typography> \r\n            <Typography className={classes.text} variant=\"body1\" color=\"primary\" align=\"left\">\r\n              {props.title}\r\n            </Typography>\r\n            <Typography  className={classes.text} variant=\"h2\" color=\"secondary\" align=\"left\">\r\n              {/* Patr    { Number.Format( Number.parseFloat( props.patrimonio ) )} */}\r\n              Patrimonio { new Intl.NumberFormat('pt-BR' , { style: 'currency', currency: 'BRL' }).format( props.patrimonio.toFixed(2) ) }\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions className={classes.cardAction}>\r\n\r\n            <Button \r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={props.onDelete}>\r\n              Deletar\r\n            </Button>\r\n\r\n          </CardActions>\r\n      </Card>\r\n    </Button>\r\n    \r\n  </Grid>)\r\n}\r\n\r\nexport default Ativo","import React, {useState} from 'react'\r\nimport {AppBar,Toolbar,Typography , Container, makeStyles , Select, MenuItem, Button, Box , Grid , Paper , Dialog , DialogTitle, DialogContent , TextField} from '@material-ui/core'\r\n\r\nconst classes = makeStyles((style)=>({\r\n  \r\n}))\r\n\r\nconst FormCarteira = (props) => {\r\n\r\n  let [nome,setNome] = useState(props.nome || null )\r\n  let [ehAtivoVariavel,setAtivoVariavel] = useState( props.ehAtivoVariavel || 'false')\r\n  let [rotulo,setRotulo] = useState( props.rotulo || 'acao')\r\n\r\n\r\n\r\n  const handleClick = () => {\r\n\r\n\r\n\r\n    props.onSave({nome,ehAtivoVariavel,rotulo})\r\n    setNome(\"\")\r\n    \r\n  }\r\n  return(\r\n    <Dialog onClose={props.onClose} open={props.open}>\r\n      <DialogTitle>\r\n        Adicionar Um novo Ativo\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        \r\n        <Box>\r\n          <TextField placeholder=\"nome\" value={nome} onChange={(e) => setNome(e.target.value)} />\r\n        </Box>\r\n\r\n        <Box>\r\n          <Select\r\n              value={ehAtivoVariavel}\r\n              onChange={(e)=> setAtivoVariavel( e.target.value )}\r\n              placeholder=\"Tipo de ativo\"\r\n            >\r\n                <MenuItem value={'false'}>Renda Fixa</MenuItem>\r\n                <MenuItem value={'true'}>Renda Variavel</MenuItem>\r\n            </Select>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Select\r\n              value={rotulo}\r\n              onChange={(e)=> setRotulo( e.target.value )}\r\n              placeholder=\"Seu Ativo\"\r\n            >\r\n                <MenuItem value={'acao'}>Ação</MenuItem>\r\n                <MenuItem value={'fundo_imobiliario'}>Fundo Imobiliario</MenuItem>\r\n                <MenuItem value={'titulo'}>Titulo renda fixa</MenuItem>\r\n                <MenuItem value={'fundo_geral'}>Fundo</MenuItem>\r\n                <MenuItem value={'fundo_de_emergencia'}>Reserva de Emergencia</MenuItem>\r\n            </Select>\r\n        </Box>\r\n\r\n        <Button onClick={handleClick}> Salvar </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default FormCarteira","import React, { useState,useEffect } from 'react';\r\nimport Chart from 'react-google-charts'\r\nimport { CircularProgress , Box } from '@material-ui/core'\r\n\r\nexport default function Graphic ({ativos}) {\r\n\r\n  //let cabecario = [\"nome\",\"patrimonio\"]\r\n  // let dados = []\r\n  // dados.push( cabecario )\r\n  // dados = [...dados , ...ativos.map( ativoItem => ([  ativoItem.nome , ativoItem.patrimonio  ]) )  ] \r\n  \r\n  let dados = ativos \r\n  console.log( \"dados>\" , dados  )\r\n  return ( \r\n    <Chart \r\n        component={Box}\r\n        width={\"350px\"}\r\n        height={\"350px\"}\r\n        chartType=\"PieChart\"\r\n        data={ dados  }\r\n        loader={<CircularProgress />}\r\n        options={{\r\n          pieStartAngle:90,\r\n          legend:\"label\"\r\n          // pieHole: 0.1,\r\n          // pieSliceTextStyle:{\r\n          //   color:\"#616161\"\r\n          // }\r\n        }}\r\n        \r\n      />\r\n  )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport Navbar from './navbar'\r\n \r\nimport firebase from './../../firebase'\r\n\r\nimport {AppBar,Toolbar,Typography , Card,CardContent, CircularProgress, Container, makeStyles , Breadcrumbs, Link , Box , Grid , Paper} from '@material-ui/core'\r\nimport AdicionarButton from '../carteira/adicionarButton'\r\n\r\nimport {Link as RouterLink} from 'react-router-dom'\r\n\r\nimport Ativo from './ativo'\r\nimport AtivoForm from './form'\r\n\r\nimport Grafic from './chart'\r\n\r\nconst carteiraRef = () => firebase.firestore().collection(\"carteira\")\r\nconst ativoRef = (id) => firebase.firestore().collection(\"carteira/\"+id+\"/ativo\")\r\n\r\nlet styles = makeStyles((style)=>({\r\n  carteiraContainer:{\r\n    padding:\"20px\",\r\n    marginTop: \"40px\"\r\n  },\r\n  container:{\r\n    // background:\" #eee\"\r\n  }\r\n}))\r\n\r\n/** listagem de todos os ativos */\r\nconst AtivoComponent = ( props ) => {\r\n  \r\n  let classes = styles()\r\n  let [ativos, setAtivos] = useState([])\r\n  let [ carteira , setCarteira ] = useState()\r\n  let [formOpen, setFormOpen] = useState(false)\r\n\r\n \r\n  \r\n  // carregar os dados da carteira => ex : title e ativos\r\n  useEffect( () => {\r\n\r\n     \r\n    let unsubscribe = \r\n      ativoRef( props.match.params.carteira )\r\n        .onSnapshot( (ativosCollection) => {\r\n           \r\n          \r\n          setAtivos( ativosCollection.docs.map( ativo => {\r\n            console.log( ativo )\r\n\r\n            return  { id:ativo.id, ...ativo.data() }\r\n          } ) )        \r\n        })\r\n        \r\n      // return () => { unsubscribe ; }\r\n  } , [props.match.url] )\r\n\r\n  \r\n  /** carregar carteira  */\r\n  useEffect( () => {\r\n\r\n    carteiraRef().doc( props.match.params.carteira)\r\n    .get()\r\n    .then( (d) => {\r\n      setCarteira(  d.data() )\r\n     \r\n    })\r\n    \r\n   console.log(props.match.url)\r\n  \r\n  } , [props.match.url])\r\n\r\n  /** atualizar patrimonio no banco de dados */\r\n  useEffect( () => {\r\n\r\n      ativoRef( props.match.params.carteira ).get().then( d => {\r\n\r\n        let patrimonio = 0\r\n        d.forEach( ativo => {\r\n          if ( typeof ativo.data().patrimonio === \"number\" )\r\n          {\r\n            patrimonio += ativo.data().patrimonio \r\n\r\n            carteiraRef().doc( props.match.params.carteira).update({patrimonio})\r\n          }\r\n\r\n        })\r\n    } )\r\n\r\n    \r\n  }, [carteira , props.match.url])\r\n\r\n\r\n  /** inserir ativo sem deixar repetir o nome */\r\n  const handleInsert = (data) => { \r\n    \r\n    ativoRef(props.match.params.carteira).get()\r\n      .then( (res) => {\r\n        \r\n        /** codigo para não permitir inserir dois ativos com o mesmo nome */\r\n        let foundedSomeone = false\r\n        \r\n        res.forEach(ativo => {\r\n          console.log( ativo.data().nome , data.nome )\r\n\r\n          if(ativo.data().nome == data.nome){\r\n            foundedSomeone = true\r\n           \r\n          }\r\n        });\r\n\r\n        if(foundedSomeone){\r\n          throw( \"Erro não é possivel adicionar o ativo com o mesmo nome\")\r\n        }\r\n        return \r\n      })\r\n      .then( () => {\r\n\r\n          ativoRef(props.match.params.carteira).doc().set( {...data,patrimonio:0} ) \r\n          \r\n\r\n      })\r\n      .then( () => { alert(\"ativo adicionado\") ; setFormOpen(false) })\r\n      .catch( ( e ) => alert( e ) )\r\n\r\n \r\n  }\r\n  \r\n  const handleDelete = ( data ) =>  ativoRef(props.match.params.carteira).doc(data).delete().then( () => alert(\"ativo deletado\"))\r\n  \r\n  return(<>\r\n    <AtivoForm  \r\n      onClose={()=>setFormOpen(false) } \r\n      open={formOpen}\r\n      onSave={handleInsert}/>\r\n\r\n    <Navbar />\r\n      <Container className={classes.container}>\r\n        <Card component={Box} mt={2} variant=\"outlined\">\r\n          <CardContent>\r\n            <Breadcrumbs>\r\n              <Link \r\n                component={RouterLink}\r\n                to='/carteira'\r\n              > \r\n                Voltar \r\n              </Link>\r\n            </Breadcrumbs>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className={ classes.carteiraContainer} variant=\"outlined\"> \r\n          <Grid container>\r\n            <Grid item style={{flexGrow:'1'}} >\r\n              <Typography >\r\n                Carteira <Typography variant=\"inline\" color=\"primary\"> <strong> {carteira && carteira.title} </strong> </Typography> \r\n              </Typography>\r\n              <Typography>\r\n                Patrimônio: \r\n                <Typography variant=\"inline\" color=\"secondary\"> \r\n                  <strong> \r\n                   { carteira && new Intl.NumberFormat('pt-BR',{ style: 'currency', currency: 'BRL' }).format( carteira.patrimonio.toFixed(2) ) }\r\n                  </strong>\r\n                </Typography>\r\n              </Typography>\r\n            </Grid> \r\n            <Grid item>\r\n              {/* mostra o grafico de pizza dos ativos */}\r\n              { ativos.length > 0 && (\r\n                <Grafic \r\n                  ativos={ [ \r\n                    [\"nome\",\"patrimonio\"] , \r\n                    ...ativos.map( ativoItem => ([  ativoItem.nome , ativoItem.patrimonio  ]) )   \r\n                  ]}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        <Card className={ classes.carteiraContainer} variant=\"outlined\" > \r\n\r\n          <Typography variant=\"h4\" component=\"h1\"> Seus Ativos   </Typography>\r\n          \r\n          <Grid container >\r\n             {ativos && ativos.map(\r\n                ativo => \r\n                ( <Ativo\r\n                       base={\"/carteira/\"+ props.match.params.carteira +\"/ativo/\" + ativo.id}\r\n                        key={ativo.id} \r\n                        title={ ativo.nome}\r\n                        id={ativo.id}  \r\n                        onDelete={ () => handleDelete( ativo.id )}\r\n                        patrimonio={ativo.patrimonio}\r\n                        rotulo={ativo.rotulo}\r\n                  />)    \r\n              )}\r\n          \r\n            <AdicionarButton texto=\"adicionar\" open={()=>setFormOpen(true)}    />\r\n          </Grid> \r\n        </Card>\r\n    </Container>\r\n  </>)\r\n}\r\nexport default AtivoComponent","import React, {useState,useEffect} from 'react'\r\nimport {AppBar,Toolbar,Typography , Container, FormControl, makeStyles , Button, Box , Select , MenuItem , Grid , Paper , Dialog , DialogTitle, DialogContent , TextField} from '@material-ui/core'\r\nimport firebase from './../../firebase'\r\n\r\n\r\nconst useStyle = makeStyles((style)=>({\r\n  button:{\r\n    marginLeft:'auto',\r\n    display:\"block\",\r\n    marginTop:\"25px\"\r\n  },\r\n  textField:{\r\n    margin: \"5px\"\r\n  }\r\n}))\r\n\r\nconst FormOperacao = (props) => {\r\n\r\n  /** o codigo tá feio eu sei */\r\n  let [valor,setValor] = useState(\"\")\r\n  let [data,setData] = useState( \"2020-10-10\")\r\n  let [qtd,setQtd] = useState(  1 )\r\n  let [tipoOperacao,setTipo] = useState( \"C\")\r\n  let [juros,setJuros] = useState(\"1\")\r\n  let [prazo,setPrazo] = useState( '2020-10-20')\r\n  // let [cotacao,setCotacao] = useState( )\r\n  let [id, setId] = useState( props.idOperacao || null)\r\n\r\n  let classes = useStyle()\r\n\r\n  /** quando o usuario submeter o formulario para criar um novo ou atualizar */\r\n  const handleClick = () => {\r\n\r\n    let formData = {valor,data,qtd,tipoOperacao}\r\n\r\n    if( props.EhAtivoVariavel == 'false')  formData = { ...formData, juros,prazo } \r\n    // if( cotacao ) formData = { ...formData, cotacao }\r\n\r\n    if( valor != null || valor != \"\"){\r\n\r\n      props.onSave( formData , id )\r\n    }\r\n    else{\r\n      alert(\"Erro, por favor coloque o nome \")\r\n    }\r\n  }\r\n\r\n \r\n  useEffect( ()=>{\r\n\r\n\r\n    if( !props.ehInserir && props.idOperacao !== null  && props.open ){\r\n      // na verdade o usuario quer atualizar e não inserir algo novo\r\n      // então pegue os valores do BANCO DE DADOS para usar de base atualizar\r\n      \r\n      setId( props.idOperacao )\r\n\r\n      firebase.firestore()\r\n        .collection(\"carteira/\"+props.carteiraId+\"/ativo/\"+props.ativoId+\"/operacao\")\r\n        .doc( props.idOperacao )\r\n        .get()\r\n        .then( (data) => {\r\n\r\n          console.log(\"DATA TO UPDATE: \",data.data())\r\n          if( data.data().prazo != null )  setPrazo( data.data().prazo ) \r\n          \r\n          setData( data.data().data ) // mudar data de compra\r\n          setJuros( data.data().juros )\r\n          setValor( data.data().valor )\r\n          setQtd( data.data().qtd)\r\n          setTipo( data.data().tipoOperacao ) \r\n        \r\n        })\r\n    }\r\n    else{\r\n      setValor(\"\")\r\n      setData(\"2020-10-10\")\r\n      setQtd(\"1\")\r\n      setTipo(\"C\")\r\n      setPrazo('2020-10-20')\r\n      setJuros(\"\")\r\n    }\r\n  } , [ props.open ])\r\n  \r\n\r\n\r\n  return(\r\n    <Dialog onClose={props.onClose} open={props.open}>\r\n      \r\n      <DialogTitle>\r\n        Adicionar uma operação ao ativo: {props.nome}\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Grid  container >\r\n          <Grid>\r\n            <Typography> Custo </Typography>\r\n            <TextField  \r\n              placeholder=\"exemplo: 45.55\"\r\n              value={valor}\r\n              onChange={(e) => setValor(e.target.value)} \r\n              className={classes.textField}\r\n            />\r\n          </Grid>\r\n          <Grid>\r\n            <Typography> Quantidade </Typography>\r\n            <TextField \r\n              type=\"number\" \r\n              placeholder=\"ex: 10\" \r\n              value={qtd}\r\n              onChange={(e) => setQtd(e.target.value)}\r\n              className={classes.textField}\r\n              style={{width:\"80px\"}}\r\n              required\r\n            />\r\n          </Grid>\r\n          {/* <Grid>\r\n            <Typography> Cotação </Typography>\r\n            <TextField  \r\n              placeholder=\"exemplo: 45.55\"\r\n              value={cotacao}\r\n              onChange={(e) => setCotacao(e.target.value)} \r\n              className={classes.textField}\r\n            />\r\n          </Grid> */}\r\n\r\n        </Grid>\r\n        <FormControl fullWidth>\r\n          <Typography> Data </Typography>\r\n          <TextField \r\n            type=\"date\"\r\n            placeholder=\"Data\"\r\n            value={data} \r\n            onChange={(e) => setData(e.target.value)} \r\n          />\r\n        </FormControl>  \r\n        <FormControl fullWidth>\r\n          <Typography> Ação </Typography>\r\n\r\n          <Select\r\n            value={tipoOperacao}\r\n            onChange={(e)=> setTipo( e.target.value)}\r\n            placeholder=\"Operação\"\r\n            className={classes.textField}\r\n          >\r\n              <MenuItem value={\"C\"}>Comprar</MenuItem>\r\n              <MenuItem value={\"V\"}>Vender</MenuItem>\r\n              <MenuItem value={\"D\"}>Receber Proventos</MenuItem>\r\n              <MenuItem value={\"R\"}>Resgatar Juros </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl>\r\n          {props.EhAtivoVariavel == 'false' && (\r\n            <>\r\n              <Box>\r\n                <Typography> Juros </Typography>\r\n                <TextField \r\n                  type=\"number\"\r\n                  placeholder=\"exemplo: 1.5 que é 1.5%AA\"\r\n                  value={juros}\r\n                  onChange={(e) => setJuros(e.target.value)}\r\n                  className={classes.textField}\r\n                  style={{width:\"184px\"}}\r\n                />\r\n              </Box>\r\n              <Box>\r\n                <Typography>Prazo</Typography>\r\n                <TextField \r\n                  type=\"date\"\r\n                  placeholder=\"Data\"\r\n                  value={prazo}\r\n                  onChange={(e) => setPrazo(e.target.value)} \r\n                  className={classes.textField}  \r\n                />\r\n              </Box>\r\n            </>\r\n          )}\r\n        </FormControl>\r\n        <Grid >\r\n          <Button\r\n            onClick={handleClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}> Realizar Ação </Button>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default FormOperacao","\r\nconst Operacao = require(\"./Operacao\")\r\n\r\nclass AtivoFinanceiro {\r\n  nome\r\n  operacoes = []\r\n  valorCotacao = 0\r\n  patrimonio =   0\r\n  tipo = \"\"\r\n  constructor(nome, valorCotacao = 0,tipo){\r\n    this.nome = nome\r\n    this.valorCotacao = valorCotacao\r\n    this.tipo = tipo\r\n    \r\n  }\r\n  pegarOperacoes = () => this.operacoes\r\n  buscarValorCotacao(){\r\n    let valorCotacao = 0\r\n  }\r\n\r\n\r\n  calcularCustoDeCompra(){\r\n    return this.qtdAtivosEmPosse() * this.calcularMediaCompra();\r\n  }\r\n\r\n  calcularMediaCompra() {\r\n  \r\n    return this.totalCompra() / this.qtdAtivosComprados()\r\n  }\r\n  calcularMediaVenda()\r\n  {\r\n   \r\n    return isNaN( this.totalVenda() / this.qtdAtivosVendidos() ) ? 0 :   this.totalVenda() / this.qtdAtivosVendidos()\r\n  }\r\n  valorPatrimonial(){\r\n    return this.qtdAtivosEmPosse() * this.calcularMediaCompra()\r\n  }\r\n  valorPatrimonialCotacao( valorCotacao ){\r\n    return this.qtdAtivosEmPosse() * ( valorCotacao || this.valorCotacao ) \r\n  }\r\n  /** lucro não realizado */\r\n  lucroRelativoNaoRealizado( valorCotacao ){\r\n  \r\n    return this.valorPatrimonialCotacao( valorCotacao || this.valorCotacao ) / this.valorPatrimonial() *100 -100\r\n  }\r\n  /** lucro não realizado */\r\n  lucroNaoRealizado( valorCotacao ){\r\n  \r\n    return this.valorPatrimonialCotacao( valorCotacao  || this.valorCotacao ) - this.valorPatrimonial() \r\n  }\r\n  lucroRealizado( ){\r\n    let lr = this.calcularMediaVenda() * this.qtdAtivosVendidos() - this.calcularMediaCompra() * this.qtdAtivosVendidos()\r\n    if( isNaN(lr)) { lr = 0}\r\n\r\n    return lr\r\n  }\r\n  lucroRealizadoRelativo( ){\r\n    \r\n    return this.lucroRealizado() / this.valorPatrimonial() *100\r\n  }\r\n  lucroTotal(){\r\n    return this.lucroRealizado() + this.lucroNaoRealizado()\r\n  }\r\n  lucroTotalRelativo(){\r\n    if( !this.valorCotacao ){\r\n      console.warn(\"Atenção não foi passado o preço da cotação, então não será possivel calcular o lucro realizado\")\r\n    }\r\n\r\n    return ( this.lucroRealizado() + this.lucroNaoRealizado() ) / this.valorPatrimonial() * 100\r\n  }\r\n  totalCompra(){\r\n    return this.operacoes.reduce( ( acumulador , {valor , tipo , qtd} ) => {\r\n      let resultado = ( tipo == \"C\") ? valor * qtd : 0\r\n      return acumulador +  resultado\r\n    } , 0) \r\n  }\r\n  \r\n  totalVenda(){\r\n    return this.operacoes.reduce( ( acumulador , {valor , tipo , qtd} ) => {\r\n      let resultado = ( tipo == \"V\") ? valor * qtd : 0\r\n      return acumulador +  resultado\r\n    } , 0) \r\n  }\r\n calcularDiferencaTotalCompraVenda(){\r\n   return Math.abs( this.totalVenda() - this.totalCompra()  )\r\n }\r\n  qtdAtivosComprados()\r\n  {\r\n    let qtd =  this.operacoes.reduce( ( acumulador , atual ) => {\r\n      let valor = ( atual.tipo == \"C\") ? atual.qtd : 0\r\n      return acumulador +  valor\r\n    } , 0)\r\n\r\n    return Math.abs(qtd)\r\n  }\r\n  qtdAtivosVendidos()\r\n  {\r\n    let qtd =  this.operacoes.reduce( ( acumulador , atual ) => {\r\n      let valor = ( atual.tipo == \"V\") ? atual.qtd : 0\r\n      return acumulador +  valor\r\n    } , 0)\r\n\r\n    if( isNaN( qtd ) ) return 0\r\n\r\n    return Math.abs(qtd  )\r\n  }\r\n  qtdAtivosEmPosse()\r\n  {\r\n\r\n    return Math.abs(this.qtdAtivosComprados() - this.qtdAtivosVendidos())\r\n  }\r\n  qtd(){\r\n    return this.qtdAtivosEmPosse()\r\n  }\r\n}\r\n\r\nexport default AtivoFinanceiro\r\n\r\n\r\n\r\n\r\n  \r\n  // /**Relativo */\r\n  // calcularLucroCotacao( precoAtual ){\r\n  //   let qtd = this.qtdAtivosEmPosse() || 1\r\n  //   return ( ( precoAtual * qtd ) / ( qtd * this.calcularMediaCompra()  ) * 100 ) -100\r\n  // }\r\n  // calcularLucroMedioVendas( )\r\n  // {\r\n  //  let p_m_compra =  this.calcularMediaCompra() * this.qtdAtivosComprados()\r\n  //  let venda = this.calcularMediaVenda() * this.qtdAtivosComprados()\r\n\r\n  //  let resultado = venda - p_m_compra;\r\n\r\n  //  return ( resultado ) \r\n  // }\r\n  // /**certo */\r\n  // calcularLucroMedioOperacoesRelativo( ) {\r\n  //   return this.calcularLucroMedioVendas() / this.totalCompra() *100\r\n  \r\n  //  }\r\n  // calcularLucroOperacoes(){\r\n  //   return  this.calcularLucroMedioVendas()\r\n  // }\r\n  // calcularLucroOperacoesRelativo(){\r\n  //   return  ( this.totalVenda() - this.totalCompra() ) /100\r\n  // }\r\n\r\n\r\n","\r\nimport Operacao from \"./Operacao\"\r\nimport AtivoFinanceiro from \"./AtivoFinanceiro\"\r\n\r\nclass RendaFixa extends AtivoFinanceiro{\r\n  \r\n  atrelacao = \"SELIC\"\r\n  jurosMedio = this.calcularMediaJuros()\r\n\r\n  constructor(nome,cotacao,atrelacao){\r\n    super(nome,cotacao,\"Renda Fixa\")\r\n    this.atrelacao = atrelacao\r\n  }\r\n  calcularTempoPassadoEmAnos(){\r\n    // media de tempo em anos\r\n    // ex 10 ativos com 5  % e 3 anos 5 ativos com 10% e media de 15 anos\r\n  }\r\n\r\n  calcularMediaJuros () {\r\n\r\n    let qtdCompras = 0\r\n\r\n    \r\n    let jurosTotal = this.operacoes.reduce( ( acumulador , {juros , tipo, qtd  } ) => {\r\n      let resultado = ( tipo == \"C\") ? juros * qtd : 0\r\n      \r\n      if( tipo == \"C\") qtdCompras += qtd  \r\n\r\n      return acumulador +  resultado\r\n    } , 0) \r\n\r\n    return jurosTotal / ( qtdCompras  || 1 ) \r\n  }\r\n  valorMedioCompraComJuros(){\r\n    return this.calcularMediaCompra() +  this.calcularMediaJuros() \r\n  }\r\n  //\r\n\r\n  lucroRealizado( qtd ){\r\n     \r\n    if( !qtd ){\r\n      qtd = this.qtdAtivosVendidos() + this.qtdAtivosRealizados()\r\n      \r\n    }\r\n    \r\n    let lr = ( this.calcularMediaJuros() * qtd ) \r\n    \r\n    \r\n\r\n    if( isNaN(lr)) { lr = 0}\r\n    return lr \r\n  }\r\n  \r\n  lucroRealizadoRelativo( ){\r\n    \r\n    console.warn( \"attt\", this.qtdAtivosComprados() )\r\n    let lucro = this.lucroRealizado() / ( this.valorPatrimonial( ) ) *100\r\n    \r\n    return isFinite( lucro ) ? lucro : 0\r\n  }\r\n  lucroTotal(){\r\n    \r\n    return this.lucroRealizado( this.qtdAtivosComprados() ) \r\n  }\r\n  lucroTotalRelativo(){\r\n    let lucro = ( this.lucroTotal() ) / ( this.valorPatrimonial( ) ) * 100\r\n    return isFinite(lucro) ? lucro : 0\r\n  }\r\n  qtdAtivosRealizadosEVendidos(){\r\n    return (this.qtdAtivosVendidos() + this.qtdAtivosRealizados())\r\n  }\r\n  calcularMediaVenda()\r\n  {\r\n    let media = this.totalVenda() / this.qtdAtivosRealizadosEVendidos()\r\n    \r\n    return isNaN( media ) ? 0 :   media \r\n  }\r\n\r\n  totalVenda(){\r\n    let total = this.operacoes.reduce( ( acumulador , {valor , tipo , qtd} ) => {\r\n      let resultado = ( tipo == \"V\") ? valor * qtd : 0\r\n      return acumulador +  resultado\r\n    } , 0) \r\n    if( isNaN(total) || !total) total = 0\r\n    \r\n\r\n    return total + this.totalRealizados()\r\n  }\r\n  \r\n\r\n\r\n  calcularMediaRealizados()\r\n  {\r\n   \r\n    return this.totalRealizados() / this.qtdAtivosRealizados()\r\n  }\r\n\r\n  totalRealizados(){\r\n    return this.operacoes.reduce( ( acumulador , {valor , tipo , qtd} ) => {\r\n      \r\n      let resultado = ( tipo == \"R\") ? valor * qtd : 0\r\n      return acumulador +  resultado\r\n    } , 0) \r\n  }\r\n\r\n  qtdAtivosRealizados()\r\n  {\r\n    let qtd =  this.operacoes.reduce( ( acumulador , atual ) => {\r\n      let valor = ( atual.tipo == \"R\") ? atual.qtd : 0\r\n      return acumulador +  valor\r\n    } , 0)\r\n    return Math.abs(qtd)\r\n  }\r\n}\r\n\r\nexport default RendaFixa","\r\nimport Operacao from \"./Operacao\"\r\nimport AtivoFinanceiro from \"./AtivoFinanceiro\"\r\nclass RendaVariavel extends AtivoFinanceiro {\r\n \r\n  constructor(nome,cotacao){\r\n    super(nome,cotacao,\"Renda Variavel\")\r\n  }\r\n}\r\n\r\nexport default RendaVariavel","const axios = require('axios')\r\n\r\n\r\nconst ObterCDI = async ( cdi_metodo ) => {\r\n  \r\n  await axios('https://api.hgbrasil.com/finance/taxes?key=27dee671')\r\n    .then(data => cdi_metodo( {cdi:data.data.results[0].cdi,data:data.data.results[0].date} ) ) \r\n\r\n}\r\n\r\nconst ObterSELIC = async ( selic_metodo ) => {\r\n  \r\n  await axios('https://api.hgbrasil.com/finance/taxes?key=27dee671')\r\n    .then(data => selic_metodo( {selic:data.data.results[0].selic,data:data.data.results[0].date} ) ) \r\n    \r\n}\r\n\r\nconst ObterIBOVvar = async ( ibov_variacao , qtdMeses = 0 ) => {\r\n  let key = '5T9PSLWSUIE8115V'\r\n \r\n  await axios('https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=BOVA11.SAO&apikey='+key)\r\n    .then(res => {\r\n      let resultado = {}\r\n\r\n      resultado = Object.entries( res.data['Monthly Time Series'] )\r\n      resultado = resultado.map( item => {\r\n        return item[1]\r\n\r\n      })\r\n\r\n     // console.log( resultado[0]['4. close'] , resultado[qtdMeses]['4. close']  )\r\n\r\n      let variacao = resultado[0]['4. close'] / resultado[qtdMeses]['4. close']\r\n      \r\n      if( Number(resultado[0]['4. close'] ) <  Number( resultado[qtdMeses]['4. close'] ) ){\r\n        variacao = ( 1 - variacao  ) * -1\r\n      }\r\n\r\n      ibov_variacao(  variacao  ) \r\n    }) \r\n\r\n    .catch( e => console.log(\"ERRO: \",e))\r\n}\r\n\r\n\r\nconst ObterIBOV = async ( ibov_metodo ) => {\r\n  \r\n  await axios('https://api.hgbrasil.com/finance/quotations?key=27dee671')\r\n    .then(data => ibov_metodo( data.data.results.stocks.IBOVESPA.points ) ) \r\n    \r\n}\r\nconst ObterCotacao = async ( nome, acao_metodo ) => {\r\n  let key = '5T9PSLWSUIE8115V'\r\n  console.log(nome)\r\n  await axios('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol='+nome+'.SA&apikey='+key)\r\n    .then(res => {\r\n      let resultado = {}\r\n\r\n      resultado = Object.entries( res.data['Time Series (Daily)'] )\r\n      resultado = resultado.map( item => {\r\n        return item[1]\r\n      })\r\n      //console.log( res.data)\r\n      resultado = resultado[0]['4. close']\r\n      \r\n\r\n      acao_metodo(resultado)\r\n    }) \r\n    \r\n}\r\n\r\nconst ObterListaBusca = async ( busca , acao_metodo) => \r\n{\r\n  await axios( 'https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords='+ busca +'&apikey=5T9PSLWSUIE8115V')\r\n  .then(res => {\r\n    let lista = res.data.bestMatches\r\n\r\n    acao_metodo(lista)\r\n  }) \r\n}\r\nconst ObterIPCA = async ( ipca_metodo ) => {\r\n  \r\n  await axios('https://api.bcb.gov.br/dados/serie/bcdata.sgs.16121/dados/ultimos/12?formato=json')\r\n    .then( res => {\r\n       let total = 0\r\n       total = res.data.reduce( (acc , atual) => { \r\n       \r\n       return acc + Number( atual.valor )  \r\n      } , 0 )\r\n\r\n      ipca_metodo( total ) \r\n      \r\n    }) \r\n    \r\n}\r\nexport {\r\n  ObterCDI,\r\n  ObterSELIC,\r\n  ObterIBOV,\r\n  ObterIPCA,\r\n  ObterCotacao,\r\n  ObterListaBusca,\r\n  ObterIBOVvar\r\n}","import RendaFixa from './RendaFixa'\r\nimport RendaVariavel from './RendaVariavel'\r\nimport  {Operacao,TipoOperacao}  from './Operacao'\r\nimport { ObterCDI , ObterSELIC, ObterIBOV, ObterIPCA,ObterCotacao  }  from './Mercado'\r\n\r\nimport data from './../data/data'\r\n \r\n\r\n\r\nconst TipoAtivo = {\r\n  \r\n  RENDA_FIXA : true,\r\n  RENDA_VARIAVEL : false\r\n}\r\n\r\nclass Carteira\r\n{\r\n  id = 0\r\n  RendaFixa = []\r\n  RendaVariavel = []\r\n  RendaTotal = () => [...this.RendaVariavel , ...this.RendaFixa]\r\n  TodosAtivos = () => this.RendaTotal()\r\n  dinheiro = 0\r\n  patrimonio = this.valorPatrimonial()\r\n  nome = \"\"\r\n  proporcoes = []\r\n  listaOperacoes = []\r\n  listaValorPatrimonialHistorico = []\r\n  qtdOperacoes  = 0\r\n  constructor( id , nome )\r\n  {\r\n    this.id = id\r\n    this.nome = nome\r\n\r\n  }\r\n\r\n   /**\r\n   * adicionar um ativo de renda fixa e evita que dois ativos com o mesmo nome exemplo ITSA3 sejam adicionados\r\n   * e adiciona uma operação\r\n   */\r\n  adicionarAtivo(  operacao , rendaFixa = true , cotacao = 0 , atrelacao = \"SELIC\")\r\n  {\r\n    /** */\r\n    \r\n    this.listaValorPatrimonialHistorico.push( \r\n      {\r\n      vp : this.valorPatrimonial(),\r\n      lucro: this.lucroCarteiraRealizadoRelativo() ,\r\n      lucroProvisorio: this.lucroProvisorioTotalRelativo() \r\n    })\r\n  \r\n    this.listaOperacoes.sort( ( a , p ) => {\r\n    \r\n      return new Date( a.operacao.data )  - new Date(p.operacao.data)  \r\n    } ) \r\n    \r\n   \r\n    this.listaOperacoes.push( { operacao  } )\r\n\r\n    if( operacao.tipo == \"C\"){\r\n      \r\n      this.qtdOperacoes  += operacao.qtd\r\n\r\n    }\r\n\r\n    let ativoEncontrado = this.TodosAtivos().find( ( ativo ) => ativo.nome == operacao.nomeAtivo  )\r\n\r\n    if( ativoEncontrado != null  )// foi encontrado um ativo então atualize ele adicionando uma operação\r\n    {\r\n\r\n        /** validar a quantidade de venda dos ativos */\r\n        if( operacao.tipo == \"V\"){\r\n\r\n          let encontrado = this.ObterAtivoPeloNome(operacao.nomeAtivo)\r\n\r\n          this.qtdOperacoes  -= operacao.qtd\r\n          \r\n          this.dinheiro += operacao.qtd * operacao.valor//+( operacao.valor * ( operacao.juros/100 || 1))\r\n          \r\n          //operacao.valor = encontrado.calcularMediaVenda() - encontrado.calcularMediaCompra() \r\n          // console.log( \"ativo \",\"qtd \",operacao.qtd,\r\n          //               \"juros\", operacao.juros,\r\n          //               \"valor\",operacao.valor ,\r\n          //               \"lucro\", operacao.valor / encontrado.calcularMediaCompra() *100 -100 )\r\n\r\n\r\n          if( encontrado && operacao.qtd > encontrado.qtdAtivosEmPosse()  ){\r\n            \r\n            throw (\"erro não é possivel remover mais ativos nessa operação, talves voce não tenha tantos ativosp para remover, tente remover menos\")\r\n            return \r\n          }\r\n        } /** ./ validado venda dos ativos */\r\n\r\n        /** validar a quantidade de venda dos ativos */\r\n        else if( operacao.tipo == \"R\"){\r\n\r\n          let encontrado = this.ObterAtivoPeloNome(operacao.nomeAtivo)\r\n          this.qtdOperacoes -= operacao.qtd \r\n          \r\n\r\n          this.dinheiro += encontrado.valorMedioCompraComJuros() * operacao.qtd\r\n          \r\n          console.log( \"ativo \",\"qtd \",operacao.qtd,\r\n                        \"juros\",  encontrado.calcularMediaJuros (),\r\n                        \"valor venda\",operacao.valor  )\r\n\r\n\r\n          if( encontrado && operacao.qtd > encontrado.qtdAtivosEmPosse()  ){\r\n            \r\n            throw (\"erro não é possivel remover mais ativos nessa operação, talves voce não tenha tantos ativosp para remover, tente remover menos\")\r\n            return \r\n          }\r\n        } /** ./ validado venda dos ativos */\r\n\r\n        //foreach nos ativos [ renda fixa ou variavel ]\r\n        const AlgoritmoAdcionador = ativo => \r\n        {\r\n          if(ativo.nome == operacao.nomeAtivo )\r\n          {          \r\n            \r\n            // INSERIR ATIVO           \r\n            ativo.operacoes.push( operacao )\r\n            \r\n            // atualizar cotacao caso usuario passe como parametro\r\n            if( cotacao != 0 ) ativo.valorCotacao = cotacao || ativo.valorCotacao || 0\r\n          }\r\n\r\n        }\r\n\r\n      let ativoAtualizado = (rendaFixa) ? this.RendaFixa.forEach( AlgoritmoAdcionador )  : this.RendaVariavel.forEach( AlgoritmoAdcionador )\r\n\r\n    }\r\n    else /** ativo não encontrado, então adicione um ativo e depois adicione a sua primeira operacao */\r\n    {\r\n      /** é renda fixa ou variavel */\r\n      let novoAtivo = (rendaFixa) ?  new RendaFixa( operacao.nomeAtivo,cotacao,atrelacao ) : new RendaVariavel( operacao.nomeAtivo,cotacao )\r\n      \r\n      // adicionar operacao no novo ativo\r\n      novoAtivo.operacoes.push(operacao)\r\n      // adicionar ativo na carteira\r\n      let ativoCriado = (rendaFixa ) ? this.RendaFixa.push( novoAtivo ) : this.RendaVariavel.push( novoAtivo )\r\n    }\r\n  }\r\n\r\n  valorPatrimonialTotal(){\r\n  \r\n\r\n    return this.valorPatrimonial() + this.dinheiro\r\n  }\r\n  valorPatrimonialRendaFixa(){\r\n    return this.RendaFixa.reduce( ( acc , curr) => {\r\n      return acc + curr.valorPatrimonial()\r\n    },0)\r\n  }\r\n  valorPatrimonialRendaVariavel(){\r\n    return this.RendaVariavel.reduce( ( acc , curr) => {\r\n      return acc + curr.valorPatrimonial()\r\n    },0)\r\n\r\n  }\r\n  /** total de dinheiro na carteira */\r\n  valorPatrimonial(){\r\n    return this.TodosAtivos().reduce( ( acc , curr) => {\r\n      return acc + curr.valorPatrimonial()\r\n    },0)\r\n\r\n  }\r\n  lucroCarteiraRealizado(){\r\n    return this.TodosAtivos().reduce( ( acc , curr) => {\r\n      let lucroR = !isNaN( curr.lucroRealizado() ) ? curr.lucroRealizado() : 0\r\n      \r\n      return acc + lucroR\r\n    },0)\r\n\r\n  }\r\n  lucroCarteiraRealizadoRelativo(){\r\n\r\n    \r\n    return this.lucroCarteiraRealizado() / this.totalCompra  ()  * 100\r\n  }\r\n  lucroProvisorioTotal(){\r\n    \r\n    return this.TodosAtivos().reduce( ( acc , curr) => {\r\n    \r\n      return acc + curr.lucroTotal()\r\n    },0)\r\n  }\r\n  lucroProvisorioTotalRelativo(){\r\n    return this.lucroProvisorioTotal() / this.totalCompra () * 100\r\n  }\r\n   /** total de dinheiro valorizado na carteira */\r\n  valorPatrimonialCotacao(){\r\n    return this.TodosAtivos().reduce( ( acc , curr ) => {\r\n      return acc + curr.valorPatrimonialCotacao( acc.valorCotacao )\r\n    },0)\r\n  }\r\n\r\n  \r\n  caixaRelativo(){\r\n    return this.dinheiro / this.valorPatrimonial() * 100\r\n  }\r\n\r\n\r\n  \r\n  historico()\r\n  {\r\n    let historico = []\r\n    let count = 1\r\n\r\n    this.OrdenarOperacao()\r\n      \r\n      this.listaOperacoes.forEach( \r\n        ({operacao}) => {\r\n\r\n          if(count >= this.listaOperacoes.length - count){\r\n            return \r\n          }\r\n          //console.log(operacao.data)\r\n          historico.push( { \r\n            nome : operacao.nomeAtivo,\r\n            preco: operacao.valor,\r\n            data : operacao.data , \r\n            qtd  : operacao.qtd , \r\n            tipo : operacao.tipo , \r\n            juros: operacao.juros,\r\n            jurosAA: operacao.jurosAA,\r\n            qtdTempoAnos: operacao.qtdTempoAnos,\r\n            lucro: this.lucroProvisorioTotalRelativo(),\r\n            vpa: this.listaValorPatrimonialHistorico[count].vp,\r\n            lucro : this.listaValorPatrimonialHistorico[count].lucro,\r\n            lucroProvisorio : this.listaValorPatrimonialHistorico[count].lucroProvisorio,\r\n          })\r\n\r\n        count++\r\n      })  \r\n      //historico.shift()\r\n      return historico\r\n\r\n    \r\n  }\r\n  totalCompra()\r\n  {\r\n    return this.TodosAtivos().reduce( ( acumulador , ativo ) => {\r\n      let resultado = ativo.totalCompra() \r\n      \r\n      return acumulador +  resultado\r\n    } , 0) \r\n  }\r\n  OrdenarHistorico(){\r\n    this.historico.sort( ( a , p ) => {\r\n      return new Date(a.data ) - new Date(p.data)\r\n    } )\r\n  }\r\n  OrdenarOperacao(){\r\n    this.operacoes().sort( ( a , p ) => {\r\n      return new Date(a.data ) - new Date(p.data)\r\n    } )\r\n  }\r\n  ObterAtivosLista(){\r\n    let rendaTotal = this.RendaTotal()\r\n    let ativos = []\r\n\r\n    rendaTotal.forEach( (ativo) => {\r\n      ativos = [...ativos,ativo.nome]\r\n    } )\r\n\r\n    return ativos\r\n  }\r\n  ObterAtivoPeloNome( buscarNome )\r\n  {\r\n    let encontrado = false\r\n\r\n    \r\n    encontrado = this.RendaVariavel.find( ({nome}) => nome == buscarNome  ) \r\n   \r\n   // console.log('RENDA VARIAVEL FIND:', encontrado)\r\n    if( encontrado == undefined )\r\n      encontrado = this.RendaFixa.find( ({nome}) => nome == buscarNome  ) \r\n\r\n    return encontrado \r\n  }\r\n  /** fazer fetch e trazer os valores cotacao */\r\n  buscarValorCotacao(){\r\n    this.RendaVariavel.forEach( item => {\r\n      let nomeAtivo = item.nome\r\n\r\n      try{\r\n        /** fetch item and get cotacao */\r\n        ObterCotacao(nomeAtivo , (valor) => {\r\n          item.cotacao = Number( valor )\r\n        })\r\n      }\r\n      catch( e ){\r\n        throw (\"Erro não foi possivel consultar o nome pelo ativo, provavelmente o nome está errado, por favor consulte pela sigla do ativo com o numero exemplo itausa: ITSA3\")\r\n      }\r\n\r\n     \r\n    })\r\n  }\r\n  operacoes(){\r\n    \r\n    let ativos = this.TodosAtivos()\r\n    let operacoes = []\r\n    /*** misturar operacoes de diversos ativos */\r\n    ativos.forEach( ( ativos ) => {\r\n      let operacao = ativos.operacoes\r\n      // operacao.ativo = this.ObterAtivoPeloNome(operacao.nomeAtivo)\r\n      operacoes = [ ...operacoes , operacao ]\r\n      \r\n    } )\r\n\r\n    return operacoes\r\n  }\r\n  historicoMensal(){\r\n    let historico = this.historico()\r\n\r\n    console.log(historico)\r\n    let historicoMensal = []\r\n\r\n    //let jumpZero = 0\r\n    \r\n    //historico.shift()\r\n    historico.forEach( (historico) => {\r\n      \r\n      let data = \"t\" + ( historico.data.getMonth() + 1) + historico.data.getFullYear()\r\n      \r\n      if(data != null )\r\n      {\r\n          let lucroAcumulado = 0\r\n          let vpa = 0\r\n          let nome = \"\"\r\n\r\n          \r\n          if( historicoMensal[data] != null ){\r\n           // qtd--\r\n\r\n            lucroAcumulado =  historicoMensal[data].lucroProvisorio ;\r\n\r\n          let gambi_no_bug = isNaN( lucroAcumulado ) ? 0 : lucroAcumulado ;\r\n\r\n            vpa =  historicoMensal[data].vpa ;\r\n\r\n          gambi_no_bug = isNaN( vpa ) ? 0 : vpa ;\r\n\r\n\r\n            //if( historico.nome != historicoMensal[data].nome){\r\n              nome += historico.nome + \" \"\r\n              nome+= historicoMensal[data].nome\r\n            //}\r\n            // else{\r\n            //  // console.log(historico.nome)\r\n            //   nome = historico.nome\r\n            // } \r\n            \r\n          }else{\r\n            \r\n            nome = historico.nome\r\n          }\r\n          \r\n          historicoMensal[data] = { \r\n            data: ( historico.data.getMonth() + 1) + \"/\" + historico.data.getFullYear(),\r\n            nome , \r\n            lucroProvisorio : isNaN( historico.lucroProvisorio + lucroAcumulado ) ? 0 : historico.lucroProvisorio + lucroAcumulado,\r\n            vpa : isNaN( historico.vpa + vpa ) ? 0 : historico.vpa + vpa\r\n            \r\n          }\r\n          //console.log( historicoMensal[data].data )\r\n      }\r\n      \r\n    })\r\n\r\n    return historicoMensal\r\n    //return historicoMensal.filter( item => item != null)\r\n  }\r\n  calcucarProporcoesRendaVariavel( ){\r\n    \r\n    // nome ativo , proporção ativo ex: papel[nome].proporcao ou papel.nome,papel.proporcao\r\n    let proporcaoGeral = []\r\n\r\n    let ativos = [...this.RendaVariavel , ...this.RendaFixa]\r\n    ativos.forEach( ( ativo )=>{\r\n\r\n     let proporcao = ativo.valorPatrimonial() / this.valorPatrimonialTotal() * 100\r\n      proporcaoGeral.push(\r\n        {\r\n          nome:ativo.nome, \r\n          proporcao, \r\n          rentabilidadeProvisoria: ativo.lucroTotalRelativo(),\r\n          rentabilidade: ativo.lucroRealizadoRelativo() ,\r\n          \r\n        })\r\n\r\n    } )\r\n\r\n    this.proporcoes = proporcaoGeral\r\n    return proporcaoGeral\r\n\r\n  }\r\n  gerarDadosRendaVariavelPatrimonio( ){\r\n    \r\n    // nome ativo , proporção ativo ex: papel[nome].proporcao ou papel.nome,papel.proporcao\r\n    let proporcaoGeral = []\r\n\r\n    let ativos = [...this.RendaVariavel , ...this.RendaFixa]\r\n    ativos.forEach( ( ativo )=>{\r\n\r\n     let proporcao = ativo.valorPatrimonial() / this.valorPatrimonialTotal() * 100\r\n      proporcaoGeral.push(\r\n        {\r\n          patrimonio: ativo.valorPatrimonial() \r\n        })\r\n\r\n    } )\r\n\r\n    this.proporcoes = proporcaoGeral\r\n    return proporcaoGeral\r\n\r\n  }\r\n  adicionarDinheiro (quantia) {\r\n    this.dinheiro += quantia\r\n  }\r\n  removerAtivoId(id ,  rendaFixa = true){\r\n    if( rendaFixa )\r\n      this.RendaFixa.filter( ( ativo )=> ativo.id != id  )\r\n    else\r\n      this.RendaVariavel.filter( ( ativo )=> ativo.id != id  )\r\n  }\r\n\r\n  removerAtivoNome( nome ,  rendaFixa = true){\r\n    if( rendaFixa )\r\n      this.RendaFixa.filter( ( ativo )=> ativo.nome != nome  )\r\n    else\r\n      this.RendaVariavel.filter( ( ativo )=> ativo.nome != nome  )\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport  {\r\n  Carteira,\r\n  TipoAtivo\r\n}","\r\nimport React,{useState,useEffect} from 'react'\r\nimport Navbar from './navbar'\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,  Typography ,\r\n  Container,\r\n  makeStyles ,\r\n  Link ,\r\n  Box ,\r\n  Button,\r\n  Grid ,\r\n  TableRow,\r\n  Breadcrumbs ,\r\n  Table , TableHead, TableBody,TableCell,\r\n  Paper,\r\n  Card,CardContent,\r\n  Dialog,DialogTitle,DialogContent,\r\n  TextField,Select,MenuItem,\r\n  Icon\r\n} from '@material-ui/core'\r\n\r\n\r\nimport FormOperacao from './formOperacao'\r\nimport firebase from './../../firebase'\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport {Link as RouterLink} from 'react-router-dom'\r\nimport { Operacao } from './../../src/Operacao'\r\nimport { Carteira as CarteiraAdmin } from './../../src/Carteira'\r\n\r\nconst operacoesRef = (carteira_id,ativo_id) => firebase.firestore().collection(\"carteira/\"+carteira_id+\"/ativo/\"+ativo_id+\"/operacao\")\r\nconst carteiraRef  = () => firebase.firestore().collection(\"carteira\")\r\nconst ativoRef     = (carteira ) => firebase.firestore().collection(\"carteira/\"+carteira+\"/ativo\")\r\nconst ativo_link   = ( carteira_param ) => \"/carteira/\"+carteira_param+\"/ativo\"\r\n\r\n\r\nlet styles = makeStyles((style)=>({\r\n  carteiraContainer:{\r\n    padding:\"20px\",\r\n    marginTop: \"40px\"\r\n  },\r\n  container:{\r\n    // background:\" #eee\"\r\n  },\r\n  operacoesContainer:{\r\n    marginTop:\"60px\",\r\n    padding: \"20px\"\r\n  }\r\n}))\r\n\r\n/** representa todos os dados do ativo como patrimonio, ele monta a carteira admin */\r\nfunction AtivoSingular (props ) {\r\n\r\n\r\n  let carteira_param = props.match.params.carteira\r\n  let ativo_param = props.match.params.ativo \r\n\r\n  let classes = styles()\r\n\r\n  let [ativo, setAtivo] = useState( { })\r\n  let [operacoes, setOperacoes] = useState([])\r\n  let [count, setCount ] = useState(1)\r\n  let [ carteiraDoc , setCarteiraDoc ] = useState({title:\"\"})\r\n\r\n\r\n  /** tem todos os metodos para administrar a carteira e acessar os parametros\r\n   * para conhecer lucro, patrimonio etc\r\n   */\r\n  let [carteiraAdm, setCarteira] = useState( new CarteiraAdmin( carteira_param ) )\r\n \r\n  let [atualizarOperacao, setAtualizarOperacao] = useState( { id:null })\r\n\r\n  /** ehInserir true ou ehAtualizar false */\r\n  let [ ehInserir, setEhInserir ] = useState( true )\r\n  let [openDialog, setOpenDialog] = useState(false)\r\n\r\n  \r\n  /** carregar dados do ativo */\r\n  useEffect( () => {\r\n\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"carteira/\"+carteira_param+\"/ativo/\")\r\n      .doc(ativo_param)\r\n      .onSnapshot( ativo => {\r\n\r\n        if(!ativo.exists){\r\n          alert(\"not exists\")\r\n        }\r\n\r\n        setAtivo( {...ativo.data(), id: ativo.id } )\r\n\r\n      })\r\n\r\n      return () =>  unsubscribe  \r\n        \r\n  } , [props.match.url   ] )\r\n\r\n  /** carregar dados da carteira */\r\n  useEffect ( ( ) => {\r\n    let ref = carteiraRef().doc(carteira_param).get().then( ( data ) => {\r\n      \r\n      setCarteiraDoc( data.data() )\r\n    })\r\n    return () => ref \r\n  },[props.match.url , openDialog])\r\n\r\n  /**carregar e atualiza todas as OPERAÇÕES somente,\r\n   * NELE A CARTEIRA ADM É CRIADA\r\n  */\r\n  useEffect ( () => {\r\n\r\n    let unsubscribe =  \r\n      operacoesRef( carteira_param , ativo_param )\r\n        .onSnapshot( operacoes => {\r\n\r\n          console.log( \"update inside CARTEIRA ADM\")\r\n          //let _carteira =  carteiraAdm\r\n           let _carteira =  new CarteiraAdmin( carteira_param , ativo.nome )\r\n\r\n          let operacoesTotal = operacoes.docs.map( operacao => {\r\n            \r\n              /** determina o tipo de ativo se é fixo ou variavel, pois cada tipo tem seus próprios calculos */\r\n              let _ehAtivoFixo = ativo.ehAtivoVariavel == \"true\" ? false : true ;\r\n            \r\n            /** para cada operação atualize a carteira */\r\n              const OperacaoNova = new Operacao( \r\n                ativo.nome ,\r\n                parseFloat( operacao.data().valor ), \r\n                operacao.data().data ,\r\n                operacao.data().tipoOperacao,\r\n                parseInt( operacao.data().qtd ),\r\n                operacao.data().prazo,\r\n                parseFloat( operacao.data().juros ),\r\n              )\r\n             \r\n          //   console.log( \"COTAÇÃO \",parseFloat ( ativo.cotacao || 0) )\r\n\r\n              _carteira.adicionarAtivo ( \r\n                OperacaoNova ,\r\n                _ehAtivoFixo , \r\n                parseFloat( ativo.cotacao ) || parseFloat( operacao.data().valor )  \r\n              )\r\n                          \r\n              return { id:operacao.id , ...operacao.data() , detalhes: OperacaoNova   }\r\n           })\r\n           \r\n           \r\n           console.log(\"CARTEIRA\",_carteira)\r\n\r\n           \r\n           /** modificar patrimonio e outros dados como lucro */\r\n            let patrimonio =  _carteira.valorPatrimonial(   )  || 0\r\n            let lucroRealizado =  _carteira.lucroProvisorioTotal() || 0\r\n            let lucroRealizadoRelativo =  _carteira.lucroProvisorioTotalRelativo()  || 0\r\n            \r\n            //console.log(\"LUCRO \", _carteira.lucroCarteiraRealizado() )\r\n\r\n            patrimonio = typeof patrimonio === \"NaN\" ? 0 : patrimonio\r\n             \r\n             ativoRef( carteira_param  )\r\n              .doc(ativo_param)\r\n              .update( { \r\n                patrimonio: patrimonio ,\r\n                lucroRealizado,\r\n                lucroRealizadoRelativo\r\n              })\r\n              .then( ( ) => { \r\n                console.log( \"updated patrimonio\" ) ;\r\n              })\r\n             \r\n             setOperacoes(operacoesTotal)\r\n             setCarteira(_carteira)\r\n\r\n\r\n              // console.log(\"CARTEIRA\",_carteira)  console.log(\"Operação \", operacoesTotal )                      console.log( \"_Carteira\" , _carteira )   \r\n        })\r\n        /** fim carregar operações */\r\n    return () => unsubscribe\r\n  } , [props.match.url  , count ,  openDialog , carteiraAdm.valorPatrimonial(   )   ])\r\n\r\n\r\n  /** save from forms new operation */\r\n  const handleSave = ( operacao /** operacao for save or update */,id /**id for update */ ) => {\r\n\r\n    if( ehInserir /*&& id != null*/  ){\r\n\r\n      /** validar operação */\r\n\r\n      /** fim validar */\r\n      operacoesRef( carteira_param , ativo_param ).add( operacao ) \r\n      .then( () => {\r\n        console.log( operacao )\r\n        setOpenDialog(false)\r\n        setCount( count + 1 )      \r\n      })//\r\n    }\r\n    else{\r\n\r\n      /** validar operação */\r\n\r\n\r\n      /** fim validar */\r\n      // update    \r\n      firebase.firestore()\r\n        .collection(\"carteira/\"+carteira_param+\"/ativo/\"+ativo_param+\"/operacao\")\r\n        .doc( id )\r\n        .update( operacao )\r\n        .then( () => {\r\n          alert( \"ativo atualizado\" ) \r\n        } )\r\n    }\r\n  }\r\n\r\n  const handleDelete = ( id ) => {\r\n    operacoesRef( carteira_param , ativo_param )\r\n      .doc(id)\r\n      .delete()\r\n      .then( () => {\r\n        \r\n        setOpenDialog(false)\r\n\r\n       // alert( \"Operação deletada!\")\r\n        setCount( count + 1)\r\n      })\r\n  }\r\n\r\n\r\n  return(<>\r\n    <Navbar />\r\n    {/* formulario para permitir adicionar uma operação ao ativo */}\r\n    <FormOperacao \r\n      open={openDialog} \r\n      onClose={()=>setOpenDialog(false)}\r\n      nome={ ativo.nome }\r\n      onSave={handleSave}\r\n      EhAtivoVariavel={ ativo.ehAtivoVariavel} \r\n      ehInserir={ ehInserir}\r\n      idOperacao={atualizarOperacao.id}\r\n      carteiraId={carteira_param }\r\n      ativoId={ativo_param } \r\n    />\r\n    <Container  className={classes.container} >\r\n        \r\n      <LinkHeader \r\n        RouterLink={RouterLink}\r\n        carteiraParam={carteira_param } />\r\n      {/* mostra um resumo dos dados do ativo */}\r\n      <AtivoDataHeader\r\n        ativo={ativo} \r\n        carteiraDoc={carteiraDoc}\r\n        carteiraAdm={carteiraAdm}\r\n        setOpenDialog={setOpenDialog}\r\n        setEhInserir={setEhInserir}\r\n        carteira_param={carteira_param}\r\n        ativo_param={ativo_param}\r\n      />\r\n      <Card className={classes.operacoesContainer} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h4\" color=\"primary\">\r\n              Operações\r\n          </Typography>\r\n          <ShowOperacoes \r\n            operacoes={operacoes} \r\n            handleDelete={handleDelete}\r\n            handleAtualizar={(id) => { setEhInserir(false ) ; setAtualizarOperacao({id}) ; setOpenDialog(true) }} \r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  </>)\r\n}/** fim metodo ativo singular */\r\n\r\n/**mostra os dados da carteira e permite atualiar ela atraves do formulario imbutido */\r\nfunction AtivoDataHeader(\r\n   {\r\n    ativo, \r\n    carteiraDoc,\r\n    carteiraAdm,\r\n    setOpenDialog, \r\n    setEhInserir ,\r\n    carteira_param ,\r\n    ativo_param  \r\n    }\r\n){\r\n\r\n  let [updateFormState,setUpdateFormDialog] = useState(false)\r\n\r\n\r\n  function FormUpdate({ativo,open,onClose}) {\r\n    \r\n    let [ativoForm , setAtivoForm] = useState(\r\n      {\r\n        nome:ativo.nome ,\r\n        ehAtivoVariavel:ativo.ehAtivoVariavel,\r\n        rotulo: ativo.rotulo,\r\n        cotacao: ativo.cotacao || ativo.valor,\r\n      }\r\n    )\r\n\r\n  /** formulario de atualização do ativo que permite mudar o nome do ativo */\r\n    function submitUpdateForm(){\r\n\r\n      \r\n      if( ativoForm.nome == \"\" ){\r\n        alert(\"por favor preencha o nome\")\r\n      }\r\n      else{\r\n          let unsubscribe = firebase\r\n          .firestore()\r\n          .collection(\"carteira/\"+carteira_param+\"/ativo/\")\r\n          .doc(ativo_param)\r\n          .update( ativoForm )\r\n          .then( () => {\r\n            \r\n            setUpdateFormDialog(false)\r\n          })\r\n      }\r\n      \r\n    }\r\n  /** formulario de atualização do ativo que permite mudar o nome do ativo */\r\n    return(\r\n      <Dialog open={open} onClose={onClose}>\r\n        <DialogTitle>\r\n          <Typography> Atualizar Ativo {ativo.nome} </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField \r\n            placeholder=\"nome\"\r\n            value={ativoForm.nome}\r\n            onChange={(e) => setAtivoForm ( { ...ativoForm , nome:  e.target.value } )}\r\n            fullWidth \r\n          />\r\n           <TextField \r\n            placeholder=\"Cotacao\"\r\n            value={ativoForm.cotacao}\r\n            onChange={(e) => setAtivoForm ( { ...ativoForm , cotacao:  e.target.value } )}\r\n            fullWidth \r\n          />\r\n          <Select\r\n            value={ativoForm.ehAtivoVariavel}\r\n            onChange={(e)=>  setAtivoForm ( { ...ativoForm , ehAtivoVariavel:  e.target.value } ) }\r\n            placeholder=\"Tipo de ativo\"  \r\n            fullWidth \r\n             >\r\n              <MenuItem value={'false'}>Renda Fixa</MenuItem>\r\n              <MenuItem value={'true'}>Renda Variavel</MenuItem>\r\n          </Select>\r\n          <Select\r\n              value={ativoForm.rotulo}\r\n              onChange={(e)=> setAtivoForm ( { ...ativoForm , rotulo:  e.target.value } ) }\r\n              placeholder=\"Seu Ativo\"\r\n              fullWidth \r\n            >\r\n              <MenuItem value={'acao'}>Ação</MenuItem>\r\n              <MenuItem value={'fundo_imobiliario'}>Fundo Imobiliario</MenuItem>\r\n              <MenuItem value={'titulo'}>Titulo renda fixa</MenuItem>\r\n              <MenuItem value={'fundo_geral'}>Fundo</MenuItem>\r\n              <MenuItem value={'fundo_de_emergencia'}>Reserva de Emergencia</MenuItem>\r\n          </Select>\r\n          <Grid my={2} component={Box}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={()=>submitUpdateForm()}\r\n              > Atualizar </Button>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    )\r\n  }\r\n  /** fim do formulario de atualização */\r\n  \r\n  let classes = styles()\r\n\r\n  /** painel que mostra os dados do ativo como nome,patrimonio , lucro*/\r\n  return( <>\r\n    <FormUpdate\r\n      ativo={ativo}\r\n      open={updateFormState}\r\n      onClose={()=>setUpdateFormDialog(false)}\r\n      setOpenDialog={setOpenDialog} />\r\n\r\n\r\n    <Card  className={ classes.carteiraContainer} variant=\"outlined\" >\r\n      <Grid container>\r\n        <Grid style={{flexGrow:\"1\"}}>\r\n\r\n          <Typography>\r\n            Carteira: {carteiraDoc.title}\r\n          </Typography>\r\n\r\n          <Typography variant=\"h4\" color=\"primary\">\r\n            {\"Ativo \"}: {ativo.nome}\r\n          </Typography>\r\n\r\n          <Typography>\r\n              Patrimonio\r\n              <strong> \r\n                { ativo.patrimonio && new Intl.NumberFormat('pt-BR',{ style: 'currency', currency: 'BRL' }).format( ativo.patrimonio.toFixed(2) ) }\r\n              </strong>\r\n          </Typography>\r\n\r\n          <Typography>\r\n              Quantidade:  <strong> { carteiraAdm && carteiraAdm.qtdOperacoes} </strong>\r\n          </Typography>\r\n          <Typography >\r\n            Lucro Valor Provisorio:   {    ativo.lucroRealizado && new Intl.NumberFormat('pt-BR',{ style: 'currency', currency: 'BRL' }).format( ativo.lucroRealizado  )  }\r\n          </Typography>\r\n          <Typography >\r\n            Lucro % Provisorio { ativo.lucroRealizadoRelativo && ativo.lucroRealizadoRelativo}\r\n          </Typography>\r\n\r\n          { ativo && ativo.cotacao && (\r\n            <Typography>\r\n                Cotacao:  \r\n                <strong>                \r\n                  { ativo.cotacao && new Intl.NumberFormat('pt-BR',{ style: 'currency', currency: 'BRL' }).format( ativo.cotacao  ) }\r\n                </strong>\r\n            </Typography>\r\n          )}\r\n\r\n\r\n          {/* <Typography style={{color:\"#3F51B5\"}}>\r\n            {ativo.rotulo }\r\n          </Typography> */}\r\n\r\n          <Typography >\r\n            {ativo.ehAtivoVariavel == 'true' ? 'renda variavel' : 'renda fixa' }\r\n          </Typography>\r\n\r\n          <Button \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={()=> { setOpenDialog(true) ; setEhInserir(true)  } }>\r\n              <Icon>add</Icon>\r\n              Adicionar Operação \r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid>\r\n            <Button \r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() =>setUpdateFormDialog(true) }>\r\n              <Icon>create</Icon>\r\n              Atualizar Ativo\r\n            </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  </>\r\n  )\r\n}\r\n\r\n/** renderiza os links que ficam no breadcrumbs */\r\nfunction LinkHeader( {RouterLink,carteiraParam}){\r\n  return(\r\n    <Card component={Box} mt={2} variant=\"outlined\">\r\n      <CardContent>\r\n        <Breadcrumbs>\r\n          <Link \r\n                component={RouterLink}\r\n                to='/carteira'>\r\n                Carteira \r\n          </Link>\r\n          <Link \r\n                component={RouterLink}\r\n                to={ativo_link( carteiraParam )}> Ativos \r\n          </Link>\r\n        </Breadcrumbs>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n/** tabela que mostra as operações que o usuario fez */\r\nfunction ShowOperacoes( {operacoes , handleDelete , handleAtualizar} ) {\r\n  return(\r\n    <Box style={{overflowX:\"auto\"}}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* <TableCell> ID </TableCell> */}\r\n            <TableCell> Patrimonio </TableCell>\r\n            <TableCell> Quantidade </TableCell>\r\n            <TableCell> Custo Unid. </TableCell>\r\n            <TableCell> Prazo </TableCell>\r\n            <TableCell> Data </TableCell>\r\n            <TableCell> Atitude </TableCell>\r\n            <TableCell> Juros </TableCell>\r\n            <TableCell> Ação </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          \r\n        {operacoes && operacoes.map( operacao => (\r\n              <TableRow key={operacao.id}>\r\n                {/* <TableCell> {operacao.id}   </TableCell> */}\r\n                <TableCell> {operacao.qtd * operacao.valor}   </TableCell>\r\n                <TableCell> {operacao.qtd}    </TableCell>\r\n                <TableCell> {operacao.valor}  </TableCell>\r\n                <TableCell> {operacao.prazo || \"-\"}  </TableCell>\r\n                <TableCell> {operacao.data} </TableCell>\r\n                <TableCell> {operacao.tipoOperacao}  </TableCell>\r\n                <TableCell> {operacao.juros || \"-\" } </TableCell>\r\n  \r\n                <TableCell>\r\n                  <Button\r\n                    onClick={ () => handleDelete( operacao.id )}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"> \r\n                    <Icon>delete</Icon>\r\n\r\n                  </Button>\r\n                  <Button\r\n                    onClick={ () => handleAtualizar( operacao.id )}\r\n                    variant=\"contained\"\r\n                    component={Box}\r\n                    mx={2}\r\n                    color=\"primary\"> \r\n                    <Icon>edit</Icon>\r\n\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow> ) \r\n            )  }    \r\n        </TableBody>\r\n      </Table>\r\n    </Box>  )\r\n}\r\n\r\n\r\n\r\nexport default AtivoSingular","import {Home} from './component/home.js'\r\nimport {Carteiras} from './components/carteira/carteiraComponent'\r\nimport Ativo from './components/ativo/ativoComponent'\r\nimport AtivoSingular from './components/ativo/operacaoComponent'\r\n \r\nexport const routesConfig = [\r\n   { path:\"/\" , component:Carteiras, exact:true} ,\r\n   { path:\"/carteira\" , component:Carteiras, exact:true} ,\r\n   { path:\"/carteira/:carteira\" , component:Ativo, exact:true} ,\r\n   { path:\"/carteira/:carteira/ativo\" , component:Ativo, exact:true} ,\r\n   { path:\"/carteira/:carteira/ativo/:ativo\" , component:AtivoSingular, exact:true} ,\r\n]\r\n","import React from 'react';\r\nimport {AppBar,Toolbar,makeStyles,Typography} from '@material-ui/core'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nlet useStyle = makeStyles( theme => ({\r\n\r\n    appbar:{\r\n      display:\"block\",\r\n      position:\"relative\"\r\n    }\r\n\r\n} ) ) \r\n\r\nfunction Navbar () {\r\n\r\n  let styles = useStyle()\r\n\r\n  return( <AppBar className={styles.appbar}>\r\n    <Toolbar>\r\n        <Typography > App Financeiro </Typography>\r\n    </Toolbar>  \r\n  </AppBar> )\r\n}\r\n\r\nexport default  Navbar","import React from 'react';\nimport {HashRouter as Router , Route,Switch } from 'react-router-dom'\nimport {routesConfig} from './Routes.js'\nimport store from './redux/root'\nimport firebase from './firebase'\nimport Navbar from './component/Navbar'\n// firebase.firestore().collection('carteira').add({title:\"Carteira Mostrão\"})\n\nimport {Grid} from '@material-ui/core'\n\nconst Routes = () =>\n{\n  return routesConfig.map( (route,key) => {\n    return ( \n    <Route\n      path={route.path}\n      exact={route.exact}\n      key={key}\n      component={route.component}\n    ></Route> )\n  } )\n}\n\nfunction App(props) \n{\n\n  return (\n    <div className=\"App\">\n\n      <Grid container>\n        <Router>\n          <Switch>\n            <Routes />\n          </Switch>\n        </Router>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider } from 'react-redux'\nimport store from './redux/root'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","  const TipoOperacao = {\r\n  Comprar : \"C\",\r\n  Vender:\"V\",\r\n  Jsp: \"J\",\r\n  Dividendos:\"D\",\r\n  Resgate:\"R\"\r\n}\r\n\r\nclass Operacao{\r\n  nomeAtivo\r\n  id\r\n  valor\r\n  data\r\n  tipo\r\n  qtd\r\n  prazo\r\n  juros\r\n \r\n  constructor(  nomeAtivo , valor , data , tipo , qtd , prazo , juros , id ){\r\n    this.nomeAtivo = nomeAtivo\r\n    this.id = id || Math.random()\r\n    this.valor = valor\r\n    this.data = data || new Date()\r\n    //console.log(data)\r\n    this.tipo = tipo\r\n    this.qtd  = qtd\r\n    this.juros  = this.calcularJuros( juros,  this.calcularQtdAnos(data,prazo) )\r\n    this.jurosAA = juros\r\n    this.qtdTempoAnos = this.calcularQtdAnos(data,prazo)\r\n    this.prazo = prazo\r\n  }\r\n  static Resgate(nome , qtd , juros = null ,data ){\r\n    return new Operacao( nome , null , data  , TipoOperacao.Resgate  , qtd , null,  juros )\r\n  \r\n  }\r\n  calcularQtdAnos( data , prazo  ){\r\n    if( data != null && prazo != null){\r\n      return  new Date( prazo ).getFullYear() - new Date( data ).getFullYear()\r\n    }\r\n    return 0\r\n  }\r\n  calcularJuros( juros ,qtdAnos){\r\n    if(qtdAnos > 0)\r\n      return juros * qtdAnos\r\n    else\r\n      return 0\r\n  }\r\n}\r\n\r\n\r\nexport  {\r\n  Operacao,\r\n  TipoOperacao\r\n}"],"sourceRoot":""}