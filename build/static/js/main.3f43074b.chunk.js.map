{"version":3,"sources":["redux/root.js","firebase.js","components/carteira/carteira.js","components/carteira/adicionarButton.js","components/carteira/navbar.js","components/carteira/form.js","components/carteira/carteiraComponent.js","components/ativo/navbar.js","components/ativo/ativo.js","components/ativo/form.js","components/ativo/ativoComponent.js","components/ativo/formOperacao.js","src/AtivoFinanceiro.js","src/RendaFixa.js","src/RendaVariavel.js","src/Mercado.js","src/Carteira.js","components/ativo/ativoSingular.js","Routes.js","component/home.js","component/Navbar.js","App.js","index.js","src/Operacao.js"],"names":["rootReducer","combineReducers","form","formReducer","store","createStore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","styles","makeStyles","style","container","margin","card","width","text","fontSize","fontWeight","button","red","color","blue","Carteira","props","classes","history","useHistory","Grid","xs","sm","md","lg","className","Button","Card","CardContent","onClick","push","id","Typography","variant","align","title","CardActions","delete","update","Adicionar","open","texto","Icon","appbar","position","NavbarCustom","AppBar","Toolbar","FormCarteira","useState","nome","setNome","useEffect","Dialog","onClose","DialogTitle","DialogContent","TextField","placeholder","value","onChange","e","target","onSave","carteiraRef","firestore","collection","carteiraContainer","padding","marginTop","topContainer","display","justifyContent","textTransform","cardAction","Ativo","base","onDelete","ehAtivoVariavel","setAtivoVariavel","rotulo","setRotulo","Box","Select","MenuItem","ativoRef","AtivoComponent","ativos","setAtivos","carteira","setCarteira","formOpen","setFormOpen","unsubscribe","match","params","onSnapshot","docs","map","ativo","console","log","data","doc","get","then","d","url","patrimonio","forEach","res","foundedSomeone","set","alert","catch","Container","component","mt","Breadcrumbs","Link","RouterLink","to","key","useStyle","marginLeft","FormOperacao","valor","setValor","setData","qtd","setQtd","tipoOperacao","setTipo","juros","setJuros","prazo","setPrazo","type","EhAtivoVariavel","formData","AtivoFinanceiro","require","valorCotacao","tipo","operacoes","pegarOperacoes","this","qtdAtivosEmPosse","calcularMediaCompra","totalCompra","qtdAtivosComprados","isNaN","totalVenda","qtdAtivosVendidos","valorPatrimonialCotacao","valorPatrimonial","lr","calcularMediaVenda","lucroRealizado","lucroNaoRealizado","warn","reduce","acumulador","Math","abs","atual","RendaFixa","cotacao","atrelacao","jurosMedio","calcularMediaJuros","qtdCompras","qtdAtivosRealizados","lucro","isFinite","lucroTotal","media","qtdAtivosRealizadosEVendidos","total","totalRealizados","RendaVariavel","axios","ObterCotacao","acao_metodo","a","resultado","Object","entries","item","RendaTotal","TodosAtivos","dinheiro","proporcoes","listaOperacoes","listaValorPatrimonialHistorico","qtdAtivos","acc","curr","lucroCarteiraRealizado","lucroProvisorioTotal","operacao","rendaFixa","vp","lucroCarteiraRealizadoRelativo","lucroProvisorio","lucroProvisorioTotalRelativo","sort","p","Date","ativoEncontrado","find","nomeAtivo","encontrado","ObterAtivoPeloNome","valorMedioCompraComJuros","AlgoritmoAdcionador","novoAtivo","historico","count","OrdenarOperacao","length","preco","jurosAA","qtdTempoAnos","vpa","rendaTotal","buscarNome","undefined","Number","historicoMensal","getMonth","getFullYear","lucroAcumulado","proporcaoGeral","proporcao","valorPatrimonialTotal","rentabilidadeProvisoria","lucroTotalRelativo","rentabilidade","lucroRealizadoRelativo","quantia","filter","operacoesRef","carteira_id","ativo_id","ativo_link","carteira_param","operacoesContainer","ShowOperacoes","handleDelete","overflowX","Table","TableHead","TableRow","TableCell","TableBody","AtivoSingular","routesConfig","path","exact","uns","carteiras","carteirasCarregadas","setCarteiras","fields","updateData","setUpdateData","add","bgColor","spacing","ativo_param","setAtivo","setOperacoes","setCount","carteiraDoc","setCarteiraDoc","CarteiraAdmin","carteiraAdm","openDialog","setOpenDialog","exists","_carteira","operacoesTotal","_ehAtivoFixo","OperacaoNova","Operacao","parseFloat","parseInt","adicionarAtivo","detalhes","theme","Navbar","Routes","route","App","ReactDOM","render","document","getElementById","TipoOperacao","Comprar","Vender","Jsp","Dividendos","Resgate","random","calcularJuros","calcularQtdAnos","qtdAnos"],"mappings":"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","file":"static/js/main.3f43074b.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n  // ...your other reducers here\r\n  // you have to pass formReducer under 'form' key,\r\n  // for custom keys look up the docs for 'getFormState'\r\n  form: formReducer\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store ","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD49GnV25MVPCggX6231YaJWI777nZZnbI\",\r\n  authDomain: \"app-carteira-inv.firebaseapp.com\",\r\n  databaseURL: \"https://app-carteira-inv.firebaseio.com\",\r\n  projectId: \"app-carteira-inv\",\r\n  storageBucket: \"app-carteira-inv.appspot.com\",\r\n  messagingSenderId: \"178456734181\",\r\n  appId: \"1:178456734181:web:14b6909faa43c59338a70c\"\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore()\r\n// db.settings({timestampsInSnapshots:true})\r\n\r\nexport default firebase","import React from 'react'\r\nimport firebase from './../../firebase'\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport {AppBar,Toolbar, Typography , Container, makeStyles , Card , CardContent , CardActions, Grid , Link , Button, Icon } from '@material-ui/core'\r\n \r\nimport {Link as Linker} from 'react-router-dom'\r\n \r\nlet styles = makeStyles((style)=>({\r\n  container:{\r\n    margin:\"10px\"\r\n  },\r\n  card:{\r\n    width:\"100%\"\r\n  },\r\n  text:{\r\n    fontSize: \"14px\",\r\n    fontWeight:\"bold\"\r\n  },\r\n  button:{\r\n    width:\"100%\"\r\n  },\r\n  red:{\r\n    color:'red'\r\n  },\r\n  blue:{\r\n    color:'blue'\r\n  }\r\n}))\r\n\r\nconst Carteira = ( props ) => {\r\n\r\n  let classes = styles()\r\n  let history = useHistory();\r\n\r\n    const handleClick = () => {\r\n      history.push( \"/carteira/\"+props.id  )\r\n    }  \r\n\r\n  return(\r\n    <Grid xs={12} sm={5} md={5} lg={2} className={classes.container} >\r\n\r\n    <Button className={classes.button} >\r\n      <Card  className={classes.card}>\r\n       \r\n          <CardContent  onClick={ handleClick }>\r\n            <Typography variant=\"body2\" >\r\n              Carteira\r\n            </Typography> \r\n            <Typography className={classes.text} variant=\"h2\" color=\"primary\" align=\"center\">\r\n              {props.title}\r\n            </Typography>\r\n            \r\n          </CardContent>\r\n          <CardActions>\r\n            <Button onClick={ props.delete } className={classes.red} >\r\n              Delete\r\n            </Button>\r\n            <Button onClick={ props.update } className={classes.blue} >\r\n              Update\r\n            </Button>\r\n          </CardActions>\r\n      </Card>\r\n    </Button>\r\n    \r\n  </Grid>)\r\n}\r\n\r\nexport default Carteira","import React from 'react'\r\nimport firebase from './../../firebase'\r\n\r\nimport {AppBar,Toolbar, Typography , Container, makeStyles , Card , CardContent , Grid , Link , Button } \r\nfrom '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport {Link as Linker} from 'react-router-dom'\r\n \r\n\r\nlet styles = makeStyles((style)=>({\r\n  container:{\r\n    margin:\"10px\"\r\n  },\r\n  card:{\r\n    width:\"100%\"\r\n  },\r\n  text:{\r\n    fontSize: \"25px\"\r\n  },\r\n  button:{\r\n    width:\"100%\"\r\n  }\r\n}))\r\n\r\nconst Adicionar = ( props ) => {\r\n\r\n  let classes = styles()\r\n\r\n\r\n  const handleClick = () => {\r\n    props.open()\r\n  }  \r\n\r\n\r\n  return(\r\n  <Grid xs={12} sm={5} md={5} lg={2} className={classes.container} >\r\n    <Button className={classes.button}  onClick={ handleClick }>\r\n      <Card  className={classes.card}>\r\n       \r\n          <CardContent>\r\n            <Typography variant=\"body2\" >\r\n              {props.texto}\r\n            </Typography> \r\n            <Typography className={classes.text} variant=\"h6\" align=\"center\">\r\n                <Icon>add_circle</Icon>\r\n            </Typography>\r\n\r\n          </CardContent >\r\n      </Card>\r\n    </Button>\r\n    \r\n  </Grid>)\r\n}\r\n\r\nexport default Adicionar","import React from 'react'\r\n\r\nimport {AppBar,Toolbar,Typography , makeStyles} from '@material-ui/core'\r\n\r\nlet styles = makeStyles((style)=>({\r\n  appbar:{\r\n    position:\"relative\"\r\n  }\r\n}))\r\n\r\nconst NavbarCustom = ( props ) => {\r\n\r\n  let classes = styles()\r\n\r\n  return(\r\n  <AppBar className={classes.appbar}>\r\n    <Toolbar>\r\n      <Typography>\r\n        Carteira\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>)\r\n}\r\n\r\nexport default NavbarCustom","import React, {useState,useEffect} from 'react'\r\nimport {AppBar,Toolbar,Typography , Container, makeStyles , Button, Box , Grid , Paper , Dialog , DialogTitle, DialogContent , TextField} from '@material-ui/core'\r\n\r\nconst classes = makeStyles((style)=>({\r\n  \r\n}))\r\n\r\nconst FormCarteira = (props) => {\r\n\r\n  let [nome,setNome] = useState( props.nome || \"\" )\r\n\r\n  const handleClick = () => {\r\n    props.onSave(nome)\r\n    setNome(\"\")\r\n  }\r\n\r\n  useEffect( () => {\r\n    setNome( props.nome )\r\n  } , [props.nome])\r\n\r\n  return(\r\n    <Dialog onClose={props.onClose} open={props.open}>\r\n      <DialogTitle>\r\n        Adicionar Uma nova carteira\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <TextField placeholder=\"nome\" value={nome} onChange={(e) => setNome(e.target.value)} />\r\n        <Button onClick={handleClick}> Salvar </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default FormCarteira","import React, {useState,useEffect} from 'react'\r\nimport firebase from './../../firebase'\r\n\r\nimport {AppBar,Toolbar,Typography , Container, makeStyles , Card , Box , Grid , Paper} from '@material-ui/core'\r\n\r\nimport Carteira from './carteira'\r\nimport AdicionarButton from './adicionarButton'\r\nimport Navbar from './navbar'\r\n\r\nimport FormCarteira from './form'\r\n\r\nconst carteiraRef = () => firebase.firestore().collection(\"carteira\")\r\n\r\nlet styles = makeStyles((style)=>({\r\n  carteiraContainer:{\r\n    padding:\"20px\",\r\n    marginTop: \"40px\"\r\n  },\r\n  container:{\r\n    // background:\" #eee\"\r\n    margin: \"auto auto\",\r\n  },\r\n  topContainer:{\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    width: \"100%\"\r\n  }\r\n}))\r\n\r\n\r\nexport const Carteiras = ( props ) => {\r\n\r\n  let classes = styles()\r\n  \r\n\r\n  useEffect( () => {\r\n    \r\n    let uns = carteiraRef()\r\n    .onSnapshot(( carteiras ) => {\r\n      \r\n      const carteirasCarregadas = carteiras.docs.map( carteira => ( {id:carteira.id, ...carteira.data() } ) )\r\n      \r\n      setCarteiras (carteirasCarregadas)\r\n      \r\n      console.log(carteirasCarregadas)\r\n    })\r\n    \r\n    return () => uns()\r\n  },[ props.match.url ])\r\n\r\n\r\n\r\n  let [carteiras,setCarteiras] = useState([]) \r\n  let [formOpen, setFormOpen] = useState(false)\r\n  let [updateData , setUpdateData ] = useState({id:0, update:false , fields:{ nome : \"\" }})\r\n  \r\n  const handleDelete = (id) => carteiraRef().doc(id).delete()\r\n\r\n  const handleInsert = (title) => {\r\n\r\n    if(!updateData.update){\r\n\r\n      carteiraRef().add({title}).then( () => setFormOpen( false ))\r\n    }\r\n    else{\r\n      carteiraRef().doc( updateData.id ).set({title}).then( () => setFormOpen( false ))\r\n      setUpdateData({ id:0 , update:false, fields:{ nome:\"\"} })\r\n    }\r\n    \r\n  }\r\n  \r\n  const handleUpdate = ( id ) => {\r\n    \r\n    \r\n    carteiraRef().doc( id ).get().then( ( data ) => {\r\n      \r\n      console.log( data.data().title )\r\n      setUpdateData({id, update:true, fields:{ nome : data.data().title} } )\r\n      setFormOpen(true)\r\n      \r\n     } )\r\n    \r\n    //\r\n  }\r\n\r\n  return(<>\r\n    <FormCarteira \r\n        onClose={() => setFormOpen( !formOpen) }\r\n        open={formOpen} \r\n        onSave={ (nome) => handleInsert(nome) } \r\n        nome = { updateData.fields.nome }\r\n        />\r\n    <Navbar />\r\n    <Box bgColor=\"green\" className={classes.topContainer}>\r\n      <Container className={classes.container}>\r\n\r\n          \r\n          <Card className={ classes.carteiraContainer} variant=\"outlined\">\r\n            <Typography>\r\n              Suas  \r\n            </Typography>\r\n            <Typography variant=\"h4\" component=\"h1\">\r\n              Carteiras\r\n            </Typography>\r\n\r\n            <Grid container  spacing={2}>\r\n            \r\n              {carteiras && carteiras.map(\r\n                  carteira => \r\n                  ( <Carteira key={carteira.id} \r\n                              title={ carteira.title} \r\n                              id={carteira.id}\r\n                              delete={ () => handleDelete( carteira.id )} \r\n                              update={ () => handleUpdate( carteira.id )} />)    )}\r\n              \r\n              <AdicionarButton \r\n                  texto=\"Adicionar\" \r\n                  open={ () => setFormOpen(true)}        />\r\n            </Grid> \r\n          </Card>\r\n      </Container>\r\n    </Box>\r\n  </>)\r\n}","import React from 'react'\r\n\r\nimport {AppBar,Toolbar,Typography , makeStyles} from '@material-ui/core'\r\n\r\nlet styles = makeStyles((style)=>({\r\n  appbar:{\r\n    position:\"relative\"\r\n  }\r\n}))\r\n\r\nconst NavbarCustom = ( props ) => {\r\n\r\n  let classes = styles()\r\n\r\n  return(\r\n  <AppBar className={classes.appbar}>\r\n    <Toolbar>\r\n      <Typography>\r\n        Ativo\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>)\r\n}\r\n\r\nexport default NavbarCustom","import React from 'react'\r\nimport firebase from './../../firebase'\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport {AppBar,Toolbar, Typography , Container, makeStyles , Card , CardActions, CardContent , Grid , Link , Button, Icon } from '@material-ui/core'\r\n \r\nimport {Link as Linker} from 'react-router-dom'\r\n \r\nlet styles = makeStyles((style)=>({\r\n  container:{\r\n    margin:\"10px\"\r\n  },\r\n  card:{\r\n    width:\"100%\",\r\n     \r\n  },\r\n  text:{\r\n    fontSize: \"14px\",\r\n    fontWeight:\"bold\",\r\n    textTransform:\"capitalize\"\r\n  },\r\n  button:{\r\n    width:\"100%\"\r\n  },\r\n  cardAction:{\r\n    display:\"flex\",\r\n    justifyContent:\"center\"\r\n  }\r\n}))\r\n\r\nconst Ativo = ( props ) => {\r\n\r\n  let classes = styles()\r\n  let history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push( props.base   )\r\n  }  \r\n\r\n  return(\r\n    <Grid xs={12} sm={5} md={5} lg={2} className={classes.container} >\r\n\r\n    <Button className={classes.button}  >\r\n      <Card  className={classes.card}>\r\n       \r\n          <CardContent onClick={ handleClick }>\r\n            <Typography variant=\"body2\" >\r\n              Ativo\r\n            </Typography> \r\n            <Typography className={classes.text} variant=\"h2\" color=\"primary\" align=\"center\">\r\n              {props.title}\r\n            </Typography>\r\n            \r\n          </CardContent>\r\n          <CardActions className={classes.cardAction}>\r\n\r\n            <Button \r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={props.onDelete}>\r\n              Deletar\r\n            </Button>\r\n\r\n          </CardActions>\r\n      </Card>\r\n    </Button>\r\n    \r\n  </Grid>)\r\n}\r\n\r\nexport default Ativo","import React, {useState} from 'react'\r\nimport {AppBar,Toolbar,Typography , Container, makeStyles , Select, MenuItem, Button, Box , Grid , Paper , Dialog , DialogTitle, DialogContent , TextField} from '@material-ui/core'\r\n\r\nconst classes = makeStyles((style)=>({\r\n  \r\n}))\r\n\r\nconst FormCarteira = (props) => {\r\n\r\n  let [nome,setNome] = useState(props.nome || null )\r\n  let [ehAtivoVariavel,setAtivoVariavel] = useState( props.ehAtivoVariavel || 'false')\r\n  let [rotulo,setRotulo] = useState( props.rotulo || 'acao')\r\n\r\n\r\n\r\n  const handleClick = () => {\r\n\r\n\r\n\r\n    props.onSave({nome,ehAtivoVariavel,rotulo})\r\n    setNome(\"\")\r\n    \r\n  }\r\n  return(\r\n    <Dialog onClose={props.onClose} open={props.open}>\r\n      <DialogTitle>\r\n        Adicionar Um novo Ativo\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        \r\n        <Box>\r\n          <TextField placeholder=\"nome\" value={nome} onChange={(e) => setNome(e.target.value)} />\r\n        </Box>\r\n\r\n        <Box>\r\n          <Select\r\n              value={ehAtivoVariavel}\r\n              onChange={(e)=> setAtivoVariavel( e.target.value )}\r\n              placeholder=\"Tipo de ativo\"\r\n            >\r\n                <MenuItem value={'false'}>Renda Fixa</MenuItem>\r\n                <MenuItem value={'true'}>Renda Variavel</MenuItem>\r\n            </Select>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Select\r\n              value={rotulo}\r\n              onChange={(e)=> setRotulo( e.target.value )}\r\n              placeholder=\"Seu Ativo\"\r\n            >\r\n                <MenuItem value={'acao'}>Ação</MenuItem>\r\n                <MenuItem value={'fundo_imobiliario'}>Fundo Imobiliario</MenuItem>\r\n                <MenuItem value={'titulo'}>Titulo renda fixa</MenuItem>\r\n                <MenuItem value={'fundo_geral'}>Fundo</MenuItem>\r\n                <MenuItem value={'fundo_de_emergencia'}>Reserva de Emergencia</MenuItem>\r\n            </Select>\r\n        </Box>\r\n\r\n        <Button onClick={handleClick}> Salvar </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default FormCarteira","import React,{useState,useEffect} from 'react'\r\nimport Navbar from './navbar'\r\n \r\nimport firebase from './../../firebase'\r\n\r\n\r\nimport {AppBar,Toolbar,Typography , Card,CardContent, Container, makeStyles , Breadcrumbs, Link , Box , Grid , Paper} from '@material-ui/core'\r\nimport AdicionarButton from '../carteira/adicionarButton'\r\n\r\nimport {Link as RouterLink} from 'react-router-dom'\r\n\r\n\r\nimport Ativo from './ativo'\r\n\r\nimport AtivoForm from './form'\r\n\r\n\r\nconst carteiraRef = () => firebase.firestore().collection(\"carteira\")\r\n\r\nconst ativoRef = (id) => firebase.firestore().collection(\"carteira/\"+id+\"/ativo\")\r\n\r\n\r\n\r\n\r\nlet styles = makeStyles((style)=>({\r\n  carteiraContainer:{\r\n    padding:\"20px\",\r\n    marginTop: \"40px\"\r\n  },\r\n  container:{\r\n    // background:\" #eee\"\r\n  }\r\n}))\r\n\r\n\r\nconst AtivoComponent = ( props ) => {\r\n  \r\n  let classes = styles()\r\n  let [ativos, setAtivos] = useState()\r\n  let [ carteira , setCarteira ] = useState()\r\n  let [formOpen, setFormOpen] = useState(false)\r\n\r\n \r\n  \r\n  // carregar os dados da carteira => ex : title\r\n  useEffect( () => {\r\n\r\n     \r\n    let unsubscribe = \r\n      ativoRef( props.match.params.carteira )\r\n        .onSnapshot( (ativos) => {\r\n           \r\n          \r\n          setAtivos( ativos.docs.map( ativo => {\r\n            console.log( ativo )\r\n            return  { id:ativo.id, ...ativo.data() }\r\n          } ) )\r\n\r\n        })\r\n        \r\n      return () => { unsubscribe() ; }\r\n  } )\r\n\r\n  useEffect( () => {\r\n    /** carregar carteira carteira */\r\n    carteiraRef().doc( props.match.params.carteira).get()\r\n    .then( (d) => {\r\n      setCarteira(  d.data() )\r\n     \r\n    })\r\n    \r\n   console.log(props.match.url)\r\n  \r\n  } , [props.match.url])\r\n\r\n  useEffect( () => {\r\n\r\n      /** atualizar patrimonio no banco de dados */\r\n      ativoRef( props.match.params.carteira ).get().then( d => {\r\n\r\n        let patrimonio = 0\r\n        d.forEach( ativo => {\r\n          if ( typeof ativo.data().patrimonio === \"number\" )\r\n          {\r\n            patrimonio += ativo.data().patrimonio \r\n\r\n            carteiraRef().doc( props.match.params.carteira).update({patrimonio})\r\n          }\r\n\r\n        })\r\n    } )\r\n\r\n\r\n  }, [carteira , props.match.url])\r\n\r\n\r\n  /** inserir ativo sem deixar repetir o nome */\r\n  const handleInsert = (data) => { \r\n    \r\n    ativoRef(props.match.params.carteira).get()\r\n      .then( (res) => {\r\n        \r\n        /** codigo para não permitir inserir dois ativos com o mesmo nome */\r\n        let foundedSomeone = false\r\n        \r\n        res.forEach(ativo => {\r\n          console.log( ativo.data().nome , data.nome )\r\n\r\n          if(ativo.data().nome == data.nome){\r\n            foundedSomeone = true\r\n           \r\n          }\r\n        });\r\n\r\n        if(foundedSomeone){\r\n          throw( \"Erro não é possivel adicionar o ativo com o mesmo nome\")\r\n        }\r\n        return \r\n      })\r\n      .then( () => {\r\n\r\n          ativoRef(props.match.params.carteira).doc().set( {...data,patrimonio:0} ) \r\n          \r\n\r\n      })\r\n      .then( () => { alert(\"ativo adicionado\") ; setFormOpen(false) })\r\n      .catch( ( e ) => alert( e ) )\r\n\r\n \r\n  }\r\n  \r\n  const handleDelete = ( data ) =>  ativoRef(props.match.params.carteira).doc(data).delete().then( () => alert(\"ativo deletado\"))\r\n  \r\n  return(<>\r\n    <AtivoForm  \r\n      onClose={()=>setFormOpen(false) } \r\n      open={formOpen}\r\n      onSave={handleInsert}/>\r\n\r\n\r\n    <Navbar />\r\n    <Container className={classes.container}>\r\n      <Card component={Box} mt={2} variant=\"outlined\">\r\n        <CardContent>\r\n          <Breadcrumbs>\r\n            <Link \r\n                  component={RouterLink}\r\n                  to='/carteira'> Voltar \r\n            </Link>\r\n          </Breadcrumbs>\r\n\r\n        </CardContent>\r\n      </Card>\r\n    \r\n    \r\n\r\n        <Card className={ classes.carteiraContainer} variant=\"outlined\"> \r\n          <Typography >\r\n            Carteira <Typography variant=\"inline\" color=\"primary\"> <strong> {carteira && carteira.title} </strong> </Typography> \r\n          </Typography>\r\n          <Typography>\r\n            patrimonio {carteira && carteira.patrimonio}\r\n          </Typography>\r\n        </Card>\r\n        <Card className={ classes.carteiraContainer} variant=\"outlined\" > \r\n          <Typography variant=\"h4\" component=\"h1\">\r\n            Seus Ativos\r\n          </Typography>\r\n          <Grid \r\n            container  >\r\n          \r\n             {ativos && ativos.map(\r\n                ativo => \r\n                ( <Ativo\r\n                       base={\"/carteira/\"+ props.match.params.carteira +\"/ativo/\" + ativo.id}\r\n                        key={ativo.id} \r\n                        title={ ativo.nome}\r\n                        id={ativo.id}  \r\n                        onDelete={ () => handleDelete( ativo.id )}\r\n                  />)    \r\n              )}\r\n            \r\n\r\n            <AdicionarButton texto=\"adicionar\" open={()=>setFormOpen(true)}    />\r\n          </Grid> \r\n        </Card>\r\n    </Container>\r\n  </>)\r\n}\r\nexport default AtivoComponent","import React, {useState} from 'react'\r\nimport {AppBar,Toolbar,Typography , Container, makeStyles , Button, Box , Select , MenuItem , Grid , Paper , Dialog , DialogTitle, DialogContent , TextField} from '@material-ui/core'\r\n\r\nconst useStyle = makeStyles((style)=>({\r\n  button:{\r\n    marginLeft:'auto',\r\n    display:\"block\",\r\n    marginTop:\"25px\"\r\n  }\r\n}))\r\n\r\nconst FormOperacao = (props) => {\r\n\r\n  let classes = useStyle()\r\n\r\n  const handleClick = () => {\r\n    let formData = {valor,data,qtd,tipoOperacao}\r\n    \r\n    if( props.EhAtivoVariavel == 'false')  formData = { ...formData, juros,prazo } \r\n\r\n   \r\n    props.onSave( formData )\r\n    \r\n  }\r\n\r\n  let [valor,setValor] = useState(\"\")\r\n  let [data,setData] = useState(\"2020-10-10\")\r\n  let [qtd,setQtd] = useState(\"\")\r\n  let [tipoOperacao,setTipo] = useState(\"C\")\r\n \r\n  let [juros,setJuros] = useState()\r\n  let [prazo,setPrazo] = useState('2020-10-20')\r\n\r\n  return(\r\n    <Dialog onClose={props.onClose} open={props.open}>\r\n      \r\n      <DialogTitle>\r\n        Adicionar uma operação ao ativo: {props.nome}\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n      <Box>\r\n        <TextField placeholder=\"Valor\" value={valor} onChange={(e) => setValor(e.target.value)} />\r\n      </Box>\r\n      <Box>\r\n        Data\r\n        <TextField type=\"date\" placeholder=\"Data\" value={data} onChange={(e) => setData(e.target.value)} />\r\n      </Box>\r\n      <Box>\r\n        <TextField type=\"number\" placeholder=\"Quantidade\" value={qtd} onChange={(e) => setQtd(e.target.value)} />\r\n      </Box>\r\n      <Box>\r\n        <Select\r\n          value={tipoOperacao}\r\n          onChange={(e)=> setTipo( e.target.value)}\r\n          placeholder=\"Operação\"\r\n        >\r\n            <MenuItem value={\"C\"}>Comprar</MenuItem>\r\n            <MenuItem value={\"V\"}>Vender</MenuItem>\r\n            <MenuItem value={\"D\"}>Receber Proventos</MenuItem>\r\n            <MenuItem value={\"R\"}>Resgatar Juros </MenuItem>\r\n        </Select>\r\n      </Box>\r\n\r\n      \r\n      <Box>\r\n        {props.EhAtivoVariavel == 'false' && (\r\n          <>\r\n            <Box>\r\n              <TextField type=\"number\" placeholder=\"Juros\" value={juros} onChange={(e) => setJuros(e.target.value)} />\r\n            </Box>\r\n            <Box>\r\n              Prazo\r\n              <TextField type=\"date\" placeholder=\"Data\" value={prazo} onChange={(e) => setPrazo(e.target.value)} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n        \r\n\r\n        <Grid >\r\n          \r\n          <Button\r\n            onClick={handleClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}> Realizar Ação </Button>\r\n\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default FormOperacao","\r\nconst Operacao = require(\"./Operacao\")\r\n\r\nclass AtivoFinanceiro {\r\n  nome\r\n  operacoes = []\r\n  valorCotacao = 0\r\n  patrimonio =   0\r\n  tipo = \"\"\r\n  constructor(nome, valorCotacao = 0,tipo){\r\n    this.nome = nome\r\n    this.valorCotacao = valorCotacao\r\n    this.tipo = tipo\r\n    \r\n  }\r\n  pegarOperacoes = () => this.operacoes\r\n  buscarValorCotacao(){\r\n    let valorCotacao = 0\r\n  }\r\n\r\n\r\n  calcularCustoDeCompra(){\r\n    return this.qtdAtivosEmPosse() * this.calcularMediaCompra();\r\n  }\r\n\r\n  calcularMediaCompra() {\r\n  \r\n    return this.totalCompra() / this.qtdAtivosComprados()\r\n  }\r\n  calcularMediaVenda()\r\n  {\r\n   \r\n    return isNaN( this.totalVenda() / this.qtdAtivosVendidos() ) ? 0 :   this.totalVenda() / this.qtdAtivosVendidos()\r\n  }\r\n  valorPatrimonial(){\r\n    return this.qtdAtivosEmPosse() * this.calcularMediaCompra()\r\n  }\r\n  valorPatrimonialCotacao( valorCotacao ){\r\n    return this.qtdAtivosEmPosse() * ( valorCotacao || this.valorCotacao ) \r\n  }\r\n  /** lucro não realizado */\r\n  lucroRelativoNaoRealizado( valorCotacao ){\r\n  \r\n    return this.valorPatrimonialCotacao( valorCotacao || this.valorCotacao ) / this.valorPatrimonial() *100 -100\r\n  }\r\n  /** lucro não realizado */\r\n  lucroNaoRealizado( valorCotacao ){\r\n  \r\n    return this.valorPatrimonialCotacao( valorCotacao  || this.valorCotacao ) - this.valorPatrimonial() \r\n  }\r\n  lucroRealizado( ){\r\n    let lr = this.calcularMediaVenda() * this.qtdAtivosVendidos() - this.calcularMediaCompra() * this.qtdAtivosVendidos()\r\n    if( isNaN(lr)) { lr = 0}\r\n\r\n    return lr\r\n  }\r\n  lucroRealizadoRelativo( ){\r\n    \r\n    return this.lucroRealizado() / this.valorPatrimonial() *100\r\n  }\r\n  lucroTotal(){\r\n    return this.lucroRealizado() + this.lucroNaoRealizado()\r\n  }\r\n  lucroTotalRelativo(){\r\n    if( !this.valorCotacao ){\r\n      console.warn(\"Atenção não foi passado o preço da cotação, então não será possivel calcular o lucro realizado\")\r\n    }\r\n\r\n    return ( this.lucroRealizado() + this.lucroNaoRealizado() ) / this.valorPatrimonial() * 100\r\n  }\r\n  totalCompra(){\r\n    return this.operacoes.reduce( ( acumulador , {valor , tipo , qtd} ) => {\r\n      let resultado = ( tipo == \"C\") ? valor * qtd : 0\r\n      return acumulador +  resultado\r\n    } , 0) \r\n  }\r\n  \r\n  totalVenda(){\r\n    return this.operacoes.reduce( ( acumulador , {valor , tipo , qtd} ) => {\r\n      let resultado = ( tipo == \"V\") ? valor * qtd : 0\r\n      return acumulador +  resultado\r\n    } , 0) \r\n  }\r\n calcularDiferencaTotalCompraVenda(){\r\n   return Math.abs( this.totalVenda() - this.totalCompra()  )\r\n }\r\n  qtdAtivosComprados()\r\n  {\r\n    let qtd =  this.operacoes.reduce( ( acumulador , atual ) => {\r\n      let valor = ( atual.tipo == \"C\") ? atual.qtd : 0\r\n      return acumulador +  valor\r\n    } , 0)\r\n\r\n    return Math.abs(qtd)\r\n  }\r\n  qtdAtivosVendidos()\r\n  {\r\n    let qtd =  this.operacoes.reduce( ( acumulador , atual ) => {\r\n      let valor = ( atual.tipo == \"V\") ? atual.qtd : 0\r\n      return acumulador +  valor\r\n    } , 0)\r\n\r\n    if( isNaN( qtd ) ) return 0\r\n\r\n    return Math.abs(qtd  )\r\n  }\r\n  qtdAtivosEmPosse()\r\n  {\r\n\r\n    return Math.abs(this.qtdAtivosComprados() - this.qtdAtivosVendidos())\r\n  }\r\n  qtd(){\r\n    return this.qtdAtivosEmPosse()\r\n  }\r\n}\r\n\r\nexport default AtivoFinanceiro\r\n\r\n\r\n\r\n\r\n  \r\n  // /**Relativo */\r\n  // calcularLucroCotacao( precoAtual ){\r\n  //   let qtd = this.qtdAtivosEmPosse() || 1\r\n  //   return ( ( precoAtual * qtd ) / ( qtd * this.calcularMediaCompra()  ) * 100 ) -100\r\n  // }\r\n  // calcularLucroMedioVendas( )\r\n  // {\r\n  //  let p_m_compra =  this.calcularMediaCompra() * this.qtdAtivosComprados()\r\n  //  let venda = this.calcularMediaVenda() * this.qtdAtivosComprados()\r\n\r\n  //  let resultado = venda - p_m_compra;\r\n\r\n  //  return ( resultado ) \r\n  // }\r\n  // /**certo */\r\n  // calcularLucroMedioOperacoesRelativo( ) {\r\n  //   return this.calcularLucroMedioVendas() / this.totalCompra() *100\r\n  \r\n  //  }\r\n  // calcularLucroOperacoes(){\r\n  //   return  this.calcularLucroMedioVendas()\r\n  // }\r\n  // calcularLucroOperacoesRelativo(){\r\n  //   return  ( this.totalVenda() - this.totalCompra() ) /100\r\n  // }\r\n\r\n\r\n","\r\nimport Operacao from \"./Operacao\"\r\nimport AtivoFinanceiro from \"./AtivoFinanceiro\"\r\n\r\nclass RendaFixa extends AtivoFinanceiro{\r\n  \r\n  atrelacao = \"SELIC\"\r\n  jurosMedio = this.calcularMediaJuros()\r\n\r\n  constructor(nome,cotacao,atrelacao){\r\n    super(nome,cotacao,\"Renda Fixa\")\r\n    this.atrelacao = atrelacao\r\n  }\r\n  calcularTempoPassadoEmAnos(){\r\n    // media de tempo em anos\r\n    // ex 10 ativos com 5  % e 3 anos 5 ativos com 10% e media de 15 anos\r\n  }\r\n\r\n  calcularMediaJuros () {\r\n\r\n    let qtdCompras = 0\r\n\r\n    \r\n    let jurosTotal = this.operacoes.reduce( ( acumulador , {juros , tipo, qtd  } ) => {\r\n      let resultado = ( tipo == \"C\") ? juros * qtd : 0\r\n      \r\n      if( tipo == \"C\") qtdCompras += qtd  \r\n\r\n      return acumulador +  resultado\r\n    } , 0) \r\n\r\n    return jurosTotal / qtdCompras\r\n  }\r\n  valorMedioCompraComJuros(){\r\n    return this.calcularMediaCompra() +  this.calcularMediaJuros() \r\n  }\r\n  //\r\n\r\n  lucroRealizado( qtd ){\r\n     \r\n    if( !qtd ){\r\n      qtd = this.qtdAtivosVendidos() + this.qtdAtivosRealizados()\r\n      \r\n    }\r\n    \r\n    let lr = ( this.calcularMediaJuros() * qtd ) \r\n    \r\n    \r\n\r\n    if( isNaN(lr)) { lr = 0}\r\n    return lr \r\n  }\r\n  \r\n  lucroRealizadoRelativo( ){\r\n    \r\n    console.warn( \"attt\", this.qtdAtivosComprados() )\r\n    let lucro = this.lucroRealizado() / ( this.valorPatrimonial( ) ) *100\r\n    \r\n    return isFinite( lucro ) ? lucro : 0\r\n  }\r\n  lucroTotal(){\r\n    \r\n    return this.lucroRealizado( this.qtdAtivosComprados() ) \r\n  }\r\n  lucroTotalRelativo(){\r\n    let lucro = ( this.lucroTotal() ) / ( this.valorPatrimonial( ) ) * 100\r\n    return isFinite(lucro) ? lucro : 0\r\n  }\r\n  qtdAtivosRealizadosEVendidos(){\r\n    return (this.qtdAtivosVendidos() + this.qtdAtivosRealizados())\r\n  }\r\n  calcularMediaVenda()\r\n  {\r\n    let media = this.totalVenda() / this.qtdAtivosRealizadosEVendidos()\r\n    \r\n    return isNaN( media ) ? 0 :   media \r\n  }\r\n\r\n  totalVenda(){\r\n    let total = this.operacoes.reduce( ( acumulador , {valor , tipo , qtd} ) => {\r\n      let resultado = ( tipo == \"V\") ? valor * qtd : 0\r\n      return acumulador +  resultado\r\n    } , 0) \r\n    if( isNaN(total) || !total) total = 0\r\n    \r\n\r\n    return total + this.totalRealizados()\r\n  }\r\n  \r\n\r\n\r\n  calcularMediaRealizados()\r\n  {\r\n   \r\n    return this.totalRealizados() / this.qtdAtivosRealizados()\r\n  }\r\n\r\n  totalRealizados(){\r\n    return this.operacoes.reduce( ( acumulador , {valor , tipo , qtd} ) => {\r\n      \r\n      let resultado = ( tipo == \"R\") ? valor * qtd : 0\r\n      return acumulador +  resultado\r\n    } , 0) \r\n  }\r\n\r\n  qtdAtivosRealizados()\r\n  {\r\n    let qtd =  this.operacoes.reduce( ( acumulador , atual ) => {\r\n      let valor = ( atual.tipo == \"R\") ? atual.qtd : 0\r\n      return acumulador +  valor\r\n    } , 0)\r\n    return Math.abs(qtd)\r\n  }\r\n}\r\n\r\nexport default RendaFixa","\r\nimport Operacao from \"./Operacao\"\r\nimport AtivoFinanceiro from \"./AtivoFinanceiro\"\r\nclass RendaVariavel extends AtivoFinanceiro {\r\n \r\n  constructor(nome,cotacao){\r\n    super(nome,cotacao,\"Renda Variavel\")\r\n  }\r\n}\r\n\r\nexport default RendaVariavel","const axios = require('axios')\r\n\r\n\r\nconst ObterCDI = async ( cdi_metodo ) => {\r\n  \r\n  await axios('https://api.hgbrasil.com/finance/taxes?key=27dee671')\r\n    .then(data => cdi_metodo( {cdi:data.data.results[0].cdi,data:data.data.results[0].date} ) ) \r\n\r\n}\r\n\r\nconst ObterSELIC = async ( selic_metodo ) => {\r\n  \r\n  await axios('https://api.hgbrasil.com/finance/taxes?key=27dee671')\r\n    .then(data => selic_metodo( {selic:data.data.results[0].selic,data:data.data.results[0].date} ) ) \r\n    \r\n}\r\n\r\nconst ObterIBOVvar = async ( ibov_variacao , qtdMeses = 0 ) => {\r\n  let key = '5T9PSLWSUIE8115V'\r\n \r\n  await axios('https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY&symbol=BOVA11.SAO&apikey='+key)\r\n    .then(res => {\r\n      let resultado = {}\r\n\r\n      resultado = Object.entries( res.data['Monthly Time Series'] )\r\n      resultado = resultado.map( item => {\r\n        return item[1]\r\n\r\n      })\r\n\r\n     // console.log( resultado[0]['4. close'] , resultado[qtdMeses]['4. close']  )\r\n\r\n      let variacao = resultado[0]['4. close'] / resultado[qtdMeses]['4. close']\r\n      \r\n      if( Number(resultado[0]['4. close'] ) <  Number( resultado[qtdMeses]['4. close'] ) ){\r\n        variacao = ( 1 - variacao  ) * -1\r\n      }\r\n\r\n      ibov_variacao(  variacao  ) \r\n    }) \r\n\r\n    .catch( e => console.log(\"ERRO: \",e))\r\n}\r\n\r\n\r\nconst ObterIBOV = async ( ibov_metodo ) => {\r\n  \r\n  await axios('https://api.hgbrasil.com/finance/quotations?key=27dee671')\r\n    .then(data => ibov_metodo( data.data.results.stocks.IBOVESPA.points ) ) \r\n    \r\n}\r\nconst ObterCotacao = async ( nome, acao_metodo ) => {\r\n  let key = '5T9PSLWSUIE8115V'\r\n  console.log(nome)\r\n  await axios('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol='+nome+'.SA&apikey='+key)\r\n    .then(res => {\r\n      let resultado = {}\r\n\r\n      resultado = Object.entries( res.data['Time Series (Daily)'] )\r\n      resultado = resultado.map( item => {\r\n        return item[1]\r\n      })\r\n      //console.log( res.data)\r\n      resultado = resultado[0]['4. close']\r\n      \r\n\r\n      acao_metodo(resultado)\r\n    }) \r\n    \r\n}\r\n\r\nconst ObterListaBusca = async ( busca , acao_metodo) => \r\n{\r\n  await axios( 'https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords='+ busca +'&apikey=5T9PSLWSUIE8115V')\r\n  .then(res => {\r\n    let lista = res.data.bestMatches\r\n\r\n    acao_metodo(lista)\r\n  }) \r\n}\r\nconst ObterIPCA = async ( ipca_metodo ) => {\r\n  \r\n  await axios('https://api.bcb.gov.br/dados/serie/bcdata.sgs.16121/dados/ultimos/12?formato=json')\r\n    .then( res => {\r\n       let total = 0\r\n       total = res.data.reduce( (acc , atual) => { \r\n       \r\n       return acc + Number( atual.valor )  \r\n      } , 0 )\r\n\r\n      ipca_metodo( total ) \r\n      \r\n    }) \r\n    \r\n}\r\nexport {\r\n  ObterCDI,\r\n  ObterSELIC,\r\n  ObterIBOV,\r\n  ObterIPCA,\r\n  ObterCotacao,\r\n  ObterListaBusca,\r\n  ObterIBOVvar\r\n}","import RendaFixa from './RendaFixa'\r\nimport RendaVariavel from './RendaVariavel'\r\nimport  {Operacao,TipoOperacao}  from './Operacao'\r\nimport { ObterCDI , ObterSELIC, ObterIBOV, ObterIPCA,ObterCotacao  }  from './Mercado'\r\n\r\nimport data from './../data/data'\r\n \r\n\r\n\r\nconst TipoAtivo = {\r\n  \r\n  RENDA_FIXA : true,\r\n  RENDA_VARIAVEL : false\r\n}\r\n\r\nclass Carteira\r\n{\r\n  id = 0\r\n  RendaFixa = []\r\n  RendaVariavel = []\r\n  RendaTotal = () => [...this.RendaVariavel , ...this.RendaFixa]\r\n  TodosAtivos = () => this.RendaTotal()\r\n  dinheiro = 0\r\n  patrimonio = 0\r\n  nome = \"\"\r\n  proporcoes = []\r\n  listaOperacoes = []\r\n  listaValorPatrimonialHistorico = []\r\n  qtdAtivos = 0\r\n  constructor( id , nome )\r\n  {\r\n    this.id = id\r\n    this.nome = nome\r\n\r\n  }\r\n  valorPatrimonialTotal(){\r\n  \r\n\r\n    return this.valorPatrimonial() + this.dinheiro\r\n  }\r\n  valorPatrimonialRendaFixa(){\r\n    return this.RendaFixa.reduce( ( acc , curr) => {\r\n      return acc + curr.valorPatrimonial()\r\n    },0)\r\n  }\r\n  valorPatrimonialRendaVariavel(){\r\n    return this.RendaVariavel.reduce( ( acc , curr) => {\r\n      return acc + curr.valorPatrimonial()\r\n    },0)\r\n\r\n  }\r\n  /** total de dinheiro na carteira */\r\n  valorPatrimonial(){\r\n    return this.TodosAtivos().reduce( ( acc , curr) => {\r\n      return acc + curr.valorPatrimonial()\r\n    },0)\r\n\r\n  }\r\n  lucroCarteiraRealizado(){\r\n    return this.TodosAtivos().reduce( ( acc , curr) => {\r\n      let lucroR = !isNaN( curr.lucroRealizado() ) ? curr.lucroRealizado() : 0\r\n      \r\n      return acc + lucroR\r\n    },0)\r\n\r\n  }\r\n  lucroCarteiraRealizadoRelativo(){\r\n\r\n    \r\n    return this.lucroCarteiraRealizado() / this.totalCompra  ()  * 100\r\n  }\r\n  lucroProvisorioTotal(){\r\n    \r\n    return this.TodosAtivos().reduce( ( acc , curr) => {\r\n    \r\n      return acc + curr.lucroTotal()\r\n    },0)\r\n  }\r\n  lucroProvisorioTotalRelativo(){\r\n    return this.lucroProvisorioTotal() / this.totalCompra () * 100\r\n  }\r\n   /** total de dinheiro valorizado na carteira */\r\n  valorPatrimonialCotacao(){\r\n    return this.TodosAtivos().reduce( ( acc , curr ) => {\r\n      return acc + curr.valorPatrimonialCotacao( acc.valorCotacao )\r\n    },0)\r\n  }\r\n\r\n  // valorPatrimonialCotacao( valorCotacao ){\r\n  //   return this.qtdAtivosEmPosse() * ( valorCotacao || this.valorCotacao ) \r\n  // }\r\n  caixaRelativo(){\r\n    return this.dinheiro / this.valorPatrimonial() * 100\r\n  }\r\n\r\n  /**\r\n   * adicionar um ativo de renda fixa e evita que dois ativos com o mesmo nome exemplo ITSA3 sejam adicionados\r\n   * e adiciona uma operação\r\n   */\r\n\r\n  \r\n  adicionarAtivo(  operacao , rendaFixa = true , cotacao = 0 , atrelacao = \"SELIC\")\r\n  {\r\n    /** */\r\n    \r\n    this.listaValorPatrimonialHistorico.push( {vp : this.valorPatrimonial(),lucro: this.lucroCarteiraRealizadoRelativo() , lucroProvisorio: this.lucroProvisorioTotalRelativo() })\r\n  \r\n    this.listaOperacoes.sort( ( a , p ) => {\r\n    \r\n      return new Date( a.operacao.data )  - new Date(p.operacao.data)  \r\n    } ) \r\n    \r\n   \r\n    this.listaOperacoes.push( { operacao  })\r\n    \r\n    this.qtdAtivos += operacao.qtd\r\n    let ativoEncontrado = this.TodosAtivos().find( ( ativo )=> ativo.nome == operacao.nomeAtivo  )\r\n\r\n    if( ativoEncontrado != null  )// foi encontrado um ativo então atualize ele adicionando uma operação\r\n    {\r\n\r\n        /** validar a quantidade de venda dos ativos */\r\n        if( operacao.tipo == \"V\"){\r\n\r\n          let encontrado = this.ObterAtivoPeloNome(operacao.nomeAtivo)\r\n          console.log( operacao.qtd )\r\n          this.qtdAtivos-= operacao.qtd\r\n\r\n          this.dinheiro += operacao.qtd * operacao.valor//+( operacao.valor * ( operacao.juros/100 || 1))\r\n          \r\n          //operacao.valor = encontrado.calcularMediaVenda() - encontrado.calcularMediaCompra() \r\n          \r\n          console.log( \"ativo \",\"qtd \",operacao.qtd,\r\n                        \"juros\", operacao.juros,\r\n                        \"valor\",operacao.valor ,\r\n                        \"lucro\", operacao.valor / encontrado.calcularMediaCompra() *100 -100 )\r\n\r\n\r\n          if( encontrado && operacao.qtd > encontrado.qtdAtivosEmPosse()  ){\r\n            \r\n            throw (\"erro não é possivel remover mais ativos nessa operação, talves voce não tenha tantos ativosp para remover, tente remover menos\")\r\n            return \r\n          }\r\n        } /** ./ validado venda dos ativos */\r\n\r\n        /** validar a quantidade de venda dos ativos */\r\n        else if( operacao.tipo == \"R\"){\r\n\r\n          let encontrado = this.ObterAtivoPeloNome(operacao.nomeAtivo)\r\n          this.qtdAtivos-= operacao.qtd \r\n          \r\n\r\n          this.dinheiro += encontrado.valorMedioCompraComJuros() * operacao.qtd\r\n          \r\n          console.log( \"ativo \",\"qtd \",operacao.qtd,\r\n                        \"juros\",  encontrado.calcularMediaJuros (),\r\n                        \"valor venda\",operacao.valor  )\r\n\r\n\r\n          if( encontrado && operacao.qtd > encontrado.qtdAtivosEmPosse()  ){\r\n            \r\n            throw (\"erro não é possivel remover mais ativos nessa operação, talves voce não tenha tantos ativosp para remover, tente remover menos\")\r\n            return \r\n          }\r\n        } /** ./ validado venda dos ativos */\r\n\r\n        //foreach nos ativos [ renda fixa ou variavel ]\r\n        const AlgoritmoAdcionador = ativo => \r\n        {\r\n          if(ativo.nome == operacao.nomeAtivo )\r\n          {          \r\n            \r\n            // INSERIR ATIVO           \r\n            ativo.operacoes.push( operacao )\r\n            \r\n            // atualizar cotacao caso usuario passe como parametro\r\n            if( cotacao != 0 ) ativo.valorCotacao = cotacao || ativo.valorCotacao || 0\r\n          }\r\n\r\n        }\r\n\r\n      let ativoAtualizado = (rendaFixa) ? this.RendaFixa.forEach( AlgoritmoAdcionador )  : this.RendaVariavel.forEach( AlgoritmoAdcionador )\r\n\r\n    }\r\n    else /** ativo não encontrado, então adicione um ativo e depois adicione a sua primeira operacao */\r\n    {\r\n      /** é renda fixa ou variavel */\r\n      let novoAtivo = (rendaFixa) ?  new RendaFixa( operacao.nomeAtivo,cotacao,atrelacao ) : new RendaVariavel( operacao.nomeAtivo,cotacao )\r\n      \r\n      // adicionar operacao no novo ativo\r\n      novoAtivo.operacoes.push(operacao)\r\n     // novoAtivo.prazo = operacao.prazo \r\n      // adicionar ativo na carteira\r\n      let ativoCriado = (rendaFixa ) ? this.RendaFixa.push( novoAtivo ) : this.RendaVariavel.push( novoAtivo )\r\n      \r\n      // registrar histórico de compras \r\n     // this.InserirHistorico(operacao)\r\n    }\r\n  }\r\n\r\n\r\n  historico()\r\n  {\r\n    let historico = []\r\n    let count = 1\r\n\r\n    this.OrdenarOperacao()\r\n      \r\n      this.listaOperacoes.forEach( \r\n        ({operacao}) => {\r\n\r\n          if(count >= this.listaOperacoes.length - count){\r\n            return \r\n          }\r\n          //console.log(operacao.data)\r\n          historico.push( { \r\n            nome : operacao.nomeAtivo,\r\n            preco: operacao.valor,\r\n            data : operacao.data , \r\n            qtd  : operacao.qtd , \r\n            tipo : operacao.tipo , \r\n            juros: operacao.juros,\r\n            jurosAA: operacao.jurosAA,\r\n            qtdTempoAnos: operacao.qtdTempoAnos,\r\n            lucro: this.lucroProvisorioTotalRelativo(),\r\n            vpa: this.listaValorPatrimonialHistorico[count].vp,\r\n            lucro : this.listaValorPatrimonialHistorico[count].lucro,\r\n            lucroProvisorio : this.listaValorPatrimonialHistorico[count].lucroProvisorio,\r\n          })\r\n\r\n        count++\r\n      })  \r\n      //historico.shift()\r\n      return historico\r\n\r\n    \r\n  }\r\n  totalCompra()\r\n  {\r\n    return this.TodosAtivos().reduce( ( acumulador , ativo ) => {\r\n      let resultado = ativo.totalCompra() \r\n      \r\n      return acumulador +  resultado\r\n    } , 0) \r\n  }\r\n  OrdenarHistorico(){\r\n    this.historico.sort( ( a , p ) => {\r\n      return new Date(a.data ) - new Date(p.data)\r\n    } )\r\n  }\r\n  OrdenarOperacao(){\r\n    this.operacoes().sort( ( a , p ) => {\r\n      return new Date(a.data ) - new Date(p.data)\r\n    } )\r\n  }\r\n  ObterAtivosLista(){\r\n    let rendaTotal = this.RendaTotal()\r\n    let ativos = []\r\n\r\n    rendaTotal.forEach( (ativo) => {\r\n      ativos = [...ativos,ativo.nome]\r\n    } )\r\n\r\n    return ativos\r\n  }\r\n  ObterAtivoPeloNome( buscarNome )\r\n  {\r\n    let encontrado = false\r\n\r\n    \r\n    encontrado = this.RendaVariavel.find( ({nome}) => nome == buscarNome  ) \r\n   \r\n   // console.log('RENDA VARIAVEL FIND:', encontrado)\r\n    if( encontrado == undefined )\r\n      encontrado = this.RendaFixa.find( ({nome}) => nome == buscarNome  ) \r\n\r\n    return encontrado \r\n  }\r\n  /** fazer fetch e trazer os valores cotacao */\r\n  buscarValorCotacao(){\r\n    this.RendaVariavel.forEach( item => {\r\n      let nomeAtivo = item.nome\r\n\r\n      try{\r\n        /** fetch item and get cotacao */\r\n        ObterCotacao(nomeAtivo , (valor) => {\r\n          item.cotacao = Number( valor )\r\n        })\r\n      }\r\n      catch( e ){\r\n        throw (\"Erro não foi possivel consultar o nome pelo ativo, provavelmente o nome está errado, por favor consulte pela sigla do ativo com o numero exemplo itausa: ITSA3\")\r\n      }\r\n\r\n     \r\n    })\r\n  }\r\n  operacoes(){\r\n    \r\n    let ativos = this.TodosAtivos()\r\n    let operacoes = []\r\n    /*** misturar operacoes de diversos ativos */\r\n    ativos.forEach( ( ativos ) => {\r\n      let operacao = ativos.operacoes\r\n      // operacao.ativo = this.ObterAtivoPeloNome(operacao.nomeAtivo)\r\n      operacoes = [ ...operacoes , operacao ]\r\n      \r\n    } )\r\n\r\n    return operacoes\r\n  }\r\n  historicoMensal(){\r\n    let historico = this.historico()\r\n\r\n    console.log(historico)\r\n    let historicoMensal = []\r\n\r\n    //let jumpZero = 0\r\n    \r\n    //historico.shift()\r\n    historico.forEach( (historico) => {\r\n      \r\n      let data = \"t\" + ( historico.data.getMonth() + 1) + historico.data.getFullYear()\r\n      \r\n      if(data != null )\r\n      {\r\n          let lucroAcumulado = 0\r\n          let vpa = 0\r\n          let nome = \"\"\r\n\r\n          \r\n          if( historicoMensal[data] != null ){\r\n           // qtd--\r\n\r\n            lucroAcumulado =  historicoMensal[data].lucroProvisorio ;\r\n\r\n          let gambi_no_bug = isNaN( lucroAcumulado ) ? 0 : lucroAcumulado ;\r\n\r\n            vpa =  historicoMensal[data].vpa ;\r\n\r\n          gambi_no_bug = isNaN( vpa ) ? 0 : vpa ;\r\n\r\n\r\n            //if( historico.nome != historicoMensal[data].nome){\r\n              nome += historico.nome + \" \"\r\n              nome+= historicoMensal[data].nome\r\n            //}\r\n            // else{\r\n            //  // console.log(historico.nome)\r\n            //   nome = historico.nome\r\n            // } \r\n            \r\n          }else{\r\n            \r\n            nome = historico.nome\r\n          }\r\n          \r\n          historicoMensal[data] = { \r\n            data: ( historico.data.getMonth() + 1) + \"/\" + historico.data.getFullYear(),\r\n            nome , \r\n            lucroProvisorio : isNaN( historico.lucroProvisorio + lucroAcumulado ) ? 0 : historico.lucroProvisorio + lucroAcumulado,\r\n            vpa : isNaN( historico.vpa + vpa ) ? 0 : historico.vpa + vpa\r\n            \r\n          }\r\n          //console.log( historicoMensal[data].data )\r\n      }\r\n      \r\n    })\r\n\r\n    return historicoMensal\r\n    //return historicoMensal.filter( item => item != null)\r\n  }\r\n  calcucarProporcoesRendaVariavel( ){\r\n    \r\n    // nome ativo , proporção ativo ex: papel[nome].proporcao ou papel.nome,papel.proporcao\r\n    let proporcaoGeral = []\r\n\r\n    let ativos = [...this.RendaVariavel , ...this.RendaFixa]\r\n    ativos.forEach( ( ativo )=>{\r\n\r\n     let proporcao = ativo.valorPatrimonial() / this.valorPatrimonialTotal() * 100\r\n      proporcaoGeral.push(\r\n        {\r\n          nome:ativo.nome, \r\n          proporcao, \r\n          rentabilidadeProvisoria: ativo.lucroTotalRelativo(),\r\n          rentabilidade: ativo.lucroRealizadoRelativo() }\r\n        )\r\n\r\n    } )\r\n\r\n    this.proporcoes = proporcaoGeral\r\n    return proporcaoGeral\r\n\r\n  }\r\n  adicionarDinheiro (quantia) {\r\n    this.dinheiro += quantia\r\n  }\r\n  removerAtivoId(id ,  rendaFixa = true){\r\n    if( rendaFixa )\r\n      this.RendaFixa.filter( ( ativo )=> ativo.id != id  )\r\n    else\r\n      this.RendaVariavel.filter( ( ativo )=> ativo.id != id  )\r\n  }\r\n\r\n  removerAtivoNome( nome ,  rendaFixa = true){\r\n    if( rendaFixa )\r\n      this.RendaFixa.filter( ( ativo )=> ativo.nome != nome  )\r\n    else\r\n      this.RendaVariavel.filter( ( ativo )=> ativo.nome != nome  )\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport  {\r\n  Carteira,\r\n  TipoAtivo\r\n}","\r\nimport React,{useState,useEffect} from 'react'\r\nimport Navbar from './navbar'\r\nimport {AppBar,Toolbar,Typography , Container, makeStyles , Link , Box , Button, Grid , TableRow, Breadcrumbs , Table , TableHead, TableBody,TableCell, Paper,Card,CardContent} from '@material-ui/core'\r\nimport FormOperacao from './formOperacao'\r\nimport firebase from './../../firebase'\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport {Link as RouterLink} from 'react-router-dom'\r\n\r\nimport {Operacao } from './../../src/Operacao'\r\n\r\nimport { Carteira as CarteiraAdmin } from './../../src/Carteira'\r\n\r\nconst operacoesRef = (carteira_id,ativo_id) => \r\n  firebase.firestore().collection(\"carteira/\"+carteira_id+\"/ativo/\"+ativo_id+\"/operacao\")\r\n\r\nconst carteiraRef = () => firebase.firestore().collection(\"carteira\")\r\n\r\nconst ativoRef = (carteira ) => firebase.firestore().collection(\"carteira/\"+carteira+\"/ativo\")\r\n\r\nconst ativo_link = ( carteira_param ) => \"/carteira/\"+carteira_param+\"/ativo\"\r\n\r\nlet styles = makeStyles((style)=>({\r\n  carteiraContainer:{\r\n    padding:\"20px\",\r\n    marginTop: \"40px\"\r\n  },\r\n  container:{\r\n    // background:\" #eee\"\r\n  },\r\n  operacoesContainer:{\r\n    marginTop:\"60px\",\r\n    padding: \"20px\"\r\n  }\r\n}))\r\n\r\nfunction ShowOperacoes( {operacoes , handleDelete} ) {\r\n  return(\r\n    <Box style={{overflowX:\"auto\"}}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* <TableCell> ID </TableCell> */}\r\n            <TableCell> Patrimonio </TableCell>\r\n            <TableCell> Quantidade </TableCell>\r\n            <TableCell> Custo Unid. </TableCell>\r\n            <TableCell> Prazo </TableCell>\r\n            <TableCell> Data </TableCell>\r\n            <TableCell> Atitude </TableCell>\r\n            <TableCell> Ação </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          \r\n        {operacoes && operacoes.map( operacao => (\r\n              <TableRow key={operacao.id}>\r\n                {/* <TableCell> {operacao.id}   </TableCell> */}\r\n                <TableCell> {operacao.qtd * operacao.valor}   </TableCell>\r\n                <TableCell> {operacao.qtd}    </TableCell>\r\n                <TableCell> {operacao.valor}  </TableCell>\r\n                <TableCell> {operacao.prazo || \"-\"}  </TableCell>\r\n                <TableCell> {operacao.data} </TableCell>\r\n                <TableCell> {operacao.tipoOperacao}  </TableCell>\r\n  \r\n                <TableCell>\r\n                  <Button\r\n                    onClick={ () => handleDelete( operacao.id )}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"> \r\n                    Deletar\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow> ) \r\n            )  }\r\n            \r\n\r\n        </TableBody>\r\n      </Table>\r\n    </Box>  )\r\n}\r\n\r\nfunction AtivoSingular (props ) {\r\n\r\n\r\n  let carteira_param = props.match.params.carteira\r\n  let ativo_param = props.match.params.ativo \r\n\r\n  let classes = styles()\r\n\r\n  let [ativo, setAtivo] = useState( { })\r\n  let [operacoes, setOperacoes] = useState([])\r\n  let [count, setCount ] = useState(1)\r\n  let [ carteiraDoc , setCarteiraDoc ] = useState({title:\"\"})\r\n  let [carteiraAdm, setCarteira] = useState( new CarteiraAdmin( carteira_param ) )\r\n\r\n  let [openDialog, setOpenDialog] = useState(false)\r\n\r\n  \r\n  useEffect( () => {\r\n\r\n    /** carregar um ativo */\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"carteira/\"+carteira_param+\"/ativo/\")\r\n      .doc(ativo_param)\r\n      .get()\r\n      .then( ativo => {\r\n        if(!ativo.exists){\r\n          alert(\"not exists\")\r\n        }\r\n        setAtivo( {...ativo.data(), id: ativo.id } )\r\n    //    setCarteira( ativo.id , ativo.data().nome )\r\n      })\r\n\r\n        return () =>  unsubscribe  \r\n        \r\n  } , [props.match.url , openDialog ] )\r\n\r\n  /** carregar dados da carteira */\r\n  useEffect ( ( ) => {\r\n    carteiraRef().doc(carteira_param).get().then( ( data ) => {\r\n      \r\n      setCarteiraDoc( data.data() )\r\n    })\r\n  },[props.match.url , openDialog])\r\n\r\n\r\n  useEffect ( () => {\r\n\r\n    /**carregar operações  */\r\n    let unsubscribe =  \r\n      operacoesRef( carteira_param , ativo_param )\r\n        .onSnapshot( operacoes => {\r\n\r\n          //alert( \"update \")\r\n          //let _carteira =  carteiraAdm\r\n           let _carteira =  new CarteiraAdmin( carteira_param)\r\n\r\n          let operacoesTotal = operacoes.docs.map( operacao => {\r\n            \r\n              /** para cada operação atualize a carteira */\r\n              \r\n              let _ehAtivoFixo = operacao.data().ehAtivoVariavel == \"true\" ? false : true ;\r\n\r\n              console.log(\"Operação \",operacao)\r\n              \r\n              const OperacaoNova = new Operacao( operacao.data().nome , parseFloat( operacao.data().valor ), parseFloat(  operacao.data().data ), operacao.data().tipoOperacao, parseInt( operacao.data().qtd ) )\r\n              \r\n              console.log( \"_Carteira\" , _carteira )\r\n              _carteira.adicionarAtivo ( OperacaoNova , _ehAtivoFixo , operacao.data().valor  )\r\n\r\n                          \r\n              return { id:operacao.id , ...operacao.data() , detalhes: OperacaoNova   }\r\n\r\n           })\r\n\r\n           \r\n           \r\n\r\n\r\n            let patrimonio = 0\r\n             try{\r\n              patrimonio = _carteira.valorPatrimonial(   ) \r\n             }\r\n             catch( e ){\r\n               console.log( e )\r\n             \r\n             }\r\n             \r\n             patrimonio = typeof patrimonio === \"NaN\" ? 0 : patrimonio\r\n             \r\n             ativoRef( carteira_param  )\r\n             .doc(ativo_param)\r\n             .update( { patrimonio: patrimonio })\r\n             .then( ( ) => { console.log( \"updated\" ) ; setCount( count + 1 )})\r\n             // setAtivo( {...ativo,  patrimonio } )\r\n             \r\n             setOperacoes(operacoesTotal)\r\n             setCarteira(_carteira)\r\n\r\n              console.log(\"CARTEIRA\",_carteira)\r\n             setCount(count+1)\r\n          \r\n\r\n             \r\n\r\n        })\r\n       // .catch( err => alert(err) )/** fim on snapshot */\r\n        \r\n        \r\n        \r\n    return () => unsubscribe\r\n  } , [props.match.url , openDialog , carteiraAdm.valorPatrimonial(   )  ])\r\n\r\n\r\n\r\n  const handleSave = ( operacao ) => {\r\n\r\n    operacoesRef( carteira_param , ativo_param ).add( operacao ) \r\n      .then( () => {\r\n        console.log( operacao )\r\n        setOpenDialog(false)\r\n        \r\n      })\r\n\r\n\r\n      \r\n  }\r\n\r\n\r\n  const handleDelete = ( id ) => {\r\n    operacoesRef( carteira_param , ativo_param )\r\n      .doc(id)\r\n      .delete()\r\n      .then( () => {\r\n        \r\n\r\n       // alert( \"Operação deletada!\")\r\n        setCount( count + 1)\r\n      })\r\n  }\r\n\r\n\r\n  return(<>\r\n    <Navbar />\r\n\r\n    <FormOperacao \r\n        open={openDialog} \r\n        onClose={()=>setOpenDialog(false)}\r\n        nome={ ativo.nome }\r\n        onSave={handleSave}\r\n        EhAtivoVariavel={ ativo.ehAtivoVariavel}  />\r\n      \r\n    <Container  className={classes.container} >\r\n        \r\n        <Card component={Box} mt={2} variant=\"outlined\">\r\n          <CardContent>\r\n            <Breadcrumbs>\r\n              <Link \r\n                    component={RouterLink}\r\n                    to='/carteira'>\r\n                    \r\n                    Carteira \r\n              </Link>\r\n              <Link \r\n                    component={RouterLink}\r\n                    to={ativo_link( carteira_param )}> Ativos \r\n              </Link>\r\n            </Breadcrumbs>\r\n          </CardContent>\r\n        </Card>\r\n\r\n\r\n        <Card  className={ classes.carteiraContainer} variant=\"outlined\" >\r\n          <Typography>\r\n            Carteira: {carteiraDoc.title}\r\n          </Typography>\r\n\r\n          <Typography variant=\"h4\" color=\"primary\">\r\n            Ativo: {ativo.nome}\r\n          </Typography>\r\n          <Typography>\r\n              Patrimonio R$<strong> { ativo.patrimonio } </strong>\r\n          </Typography>\r\n          <Typography style={{color:\"#3F51B5\"}}>\r\n            {ativo.rotulo }\r\n          </Typography>\r\n\r\n          <Typography >\r\n            {ativo.ehAtivoVariavel == 'true' ? 'renda variavel' : 'renda fixa' }\r\n          </Typography>\r\n         \r\n\r\n          <Button \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={()=>setOpenDialog(true)}> Adicionar Operação </Button>\r\n\r\n        </Card>\r\n\r\n\r\n        <Card className={classes.operacoesContainer} variant=\"outlined\">\r\n          <CardContent>\r\n\r\n            <Typography variant=\"h4\" color=\"primary\">\r\n                Operações\r\n            </Typography>\r\n            \r\n            <ShowOperacoes operacoes={operacoes} handleDelete={handleDelete} />\r\n\r\n          </CardContent>\r\n\r\n          </Card>\r\n    </Container>\r\n\r\n  </>)\r\n}\r\n\r\nexport default AtivoSingular","import {Home} from './component/home.js'\r\nimport {Carteiras} from './components/carteira/carteiraComponent'\r\nimport Ativo from './components/ativo/ativoComponent'\r\nimport AtivoSingular from './components/ativo/ativoSingular'\r\n \r\nexport const routesConfig = [\r\n   { path:\"/\" , component:Home, exact:true} ,\r\n   { path:\"/carteira\" , component:Carteiras, exact:true} ,\r\n   { path:\"/carteira/:carteira\" , component:Ativo, exact:true} ,\r\n   { path:\"/carteira/:carteira/ativo\" , component:Ativo, exact:true} ,\r\n   { path:\"/carteira/:carteira/ativo/:ativo\" , component:AtivoSingular, exact:true} ,\r\n]\r\n","import React,{useState} from 'react'\r\n\r\nexport const Home = (props) => {\r\n\r\n  return (<>\r\n    Home\r\n  </>)\r\n}","import React from 'react';\r\nimport {AppBar,Toolbar,makeStyles,Typography} from '@material-ui/core'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nlet useStyle = makeStyles( theme => ({\r\n\r\n    appbar:{\r\n      display:\"block\",\r\n      position:\"relative\"\r\n    }\r\n\r\n} ) ) \r\n\r\nfunction Navbar () {\r\n\r\n  let styles = useStyle()\r\n\r\n  return( <AppBar className={styles.appbar}>\r\n    <Toolbar>\r\n        <Typography > App Financeiro </Typography>\r\n    </Toolbar>  \r\n  </AppBar> )\r\n}\r\n\r\nexport default  Navbar","import React from 'react';\nimport {HashRouter as Router , Route,Switch } from 'react-router-dom'\nimport {routesConfig} from './Routes.js'\nimport store from './redux/root'\nimport firebase from './firebase'\nimport Navbar from './component/Navbar'\n// firebase.firestore().collection('carteira').add({title:\"Carteira Mostrão\"})\n\nimport {Grid} from '@material-ui/core'\n\nconst Routes = () =>\n{\n  return routesConfig.map( (route,key) => {\n    return ( \n    <Route\n      path={route.path}\n      exact={route.exact}\n      key={key}\n      component={route.component}\n    ></Route> )\n  } )\n}\n\nfunction App(props) \n{\n\n  return (\n    <div className=\"App\">\n\n      <Grid container>\n        <Router>\n          <Switch>\n            <Routes />\n          </Switch>\n        </Router>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider } from 'react-redux'\nimport store from './redux/root'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","  const TipoOperacao = {\r\n  Comprar : \"C\",\r\n  Vender:\"V\",\r\n  Jsp: \"J\",\r\n  Dividendos:\"D\",\r\n  Resgate:\"R\"\r\n}\r\n\r\nclass Operacao{\r\n  nomeAtivo\r\n  id\r\n  valor\r\n  data\r\n  tipo\r\n  qtd\r\n  prazo\r\n  juros\r\n \r\n  constructor(  nomeAtivo , valor , data , tipo , qtd , prazo , juros , id ){\r\n    this.nomeAtivo = nomeAtivo\r\n    this.id = id || Math.random()\r\n    this.valor = valor\r\n    this.data = data || new Date()\r\n    //console.log(data)\r\n    this.tipo = tipo\r\n    this.qtd  = qtd\r\n    this.juros  = this.calcularJuros( juros,  this.calcularQtdAnos(data,prazo) )\r\n    this.jurosAA = juros\r\n    this.qtdTempoAnos = this.calcularQtdAnos(data,prazo)\r\n    this.prazo = prazo\r\n  }\r\n  static Resgate(nome , qtd , juros = null ,data ){\r\n    return new Operacao( nome , null , data  , TipoOperacao.Resgate  , qtd , null,  juros )\r\n  \r\n  }\r\n  calcularQtdAnos( data , prazo  ){\r\n    if( data != null && prazo != null){\r\n      return  new Date( prazo ).getFullYear() - new Date( data ).getFullYear()\r\n    }\r\n    return 0\r\n  }\r\n  calcularJuros( juros ,qtdAnos){\r\n    if(qtdAnos > 0)\r\n      return juros * qtdAnos\r\n    else\r\n      return 0\r\n  }\r\n}\r\n\r\n\r\nexport  {\r\n  Operacao,\r\n  TipoOperacao\r\n}"],"sourceRoot":""}